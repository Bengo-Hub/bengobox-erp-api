# Generated by Django 5.2.7 on 2025-10-25 21:43

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        ('product', '0001_initial'),
        ('stockinventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ManufacturingAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='Date')),
                ('total_batches', models.IntegerField(default=0, verbose_name='Total Batches')),
                ('completed_batches', models.IntegerField(default=0, verbose_name='Completed Batches')),
                ('failed_batches', models.IntegerField(default=0, verbose_name='Failed Batches')),
                ('total_production_quantity', models.DecimalField(decimal_places=4, default=0, max_digits=14, verbose_name='Total Production Quantity')),
                ('total_raw_material_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14, verbose_name='Total Raw Material Cost')),
                ('total_labor_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14, verbose_name='Total Labor Cost')),
                ('total_overhead_cost', models.DecimalField(decimal_places=4, default=0, max_digits=14, verbose_name='Total Overhead Cost')),
            ],
            options={
                'verbose_name': 'Manufacturing Analytics',
                'verbose_name_plural': 'Manufacturing Analytics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='idx_manuf_analytics_date')],
            },
        ),
        migrations.CreateModel(
            name='ProductFormula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Formula Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('expected_output_quantity', models.DecimalField(decimal_places=4, help_text='The expected quantity of final product produced by this formula', max_digits=14, verbose_name='Expected Output Quantity')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('version', models.PositiveIntegerField(default=1, verbose_name='Version')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_formulas', to=settings.AUTH_USER_MODEL)),
                ('final_product', models.ForeignKey(help_text='The final product that this formula produces', on_delete=django.db.models.deletion.CASCADE, related_name='formulas', to='product.products')),
                ('output_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_formulas', to='stockinventory.unit')),
            ],
            options={
                'verbose_name': 'Product Formula',
                'verbose_name_plural': 'Product Formulas',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='FormulaIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=14, verbose_name='Quantity')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('raw_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formula_usages', to='stockinventory.stockinventory')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='formula_ingredients', to='stockinventory.unit')),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='manufacturing.productformula')),
            ],
            options={
                'verbose_name': 'Formula Ingredient',
                'verbose_name_plural': 'Formula Ingredients',
            },
        ),
        migrations.CreateModel(
            name='ProductionBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50, unique=True, verbose_name='Batch Number')),
                ('scheduled_date', models.DateTimeField(verbose_name='Scheduled Date')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='planned', max_length=20, verbose_name='Status')),
                ('planned_quantity', models.DecimalField(decimal_places=4, max_digits=14, verbose_name='Planned Quantity')),
                ('actual_quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True, verbose_name='Actual Quantity')),
                ('labor_cost', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=14, verbose_name='Labor Cost')),
                ('overhead_cost', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=14, verbose_name='Overhead Cost')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_batches', to='business.branch')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_batches', to='manufacturing.productformula')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_batches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Production Batch',
                'verbose_name_plural': 'Production Batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BatchRawMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_quantity', models.DecimalField(decimal_places=4, max_digits=14, verbose_name='Planned Quantity')),
                ('actual_quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True, verbose_name='Actual Quantity')),
                ('cost', models.DecimalField(decimal_places=4, max_digits=14, verbose_name='Cost')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('raw_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_usages', to='stockinventory.stockinventory')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_materials', to='stockinventory.unit')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_materials', to='manufacturing.productionbatch')),
            ],
            options={
                'verbose_name': 'Batch Raw Material',
                'verbose_name_plural': 'Batch Raw Materials',
            },
        ),
        migrations.CreateModel(
            name='QualityCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Check Date')),
                ('result', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('pending', 'Pending')], default='pending', max_length=10, verbose_name='Result')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_checks', to='manufacturing.productionbatch')),
                ('inspector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_checks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Quality Check',
                'verbose_name_plural': 'Quality Checks',
                'ordering': ['-check_date'],
            },
        ),
        migrations.CreateModel(
            name='RawMaterialUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_used', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=14)),
                ('transaction_type', models.CharField(choices=[('production', 'Production'), ('testing', 'Testing'), ('wastage', 'Wastage'), ('return', 'Return'), ('adjustment', 'Adjustment')], max_length=20)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('finished_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_material_usages', to='product.products')),
                ('raw_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_in_products', to='stockinventory.stockinventory')),
            ],
            options={
                'verbose_name': 'Raw Material Usage',
                'verbose_name_plural': 'Raw Material Usages',
            },
        ),
        migrations.AddIndex(
            model_name='productformula',
            index=models.Index(fields=['name'], name='idx_product_formula_name'),
        ),
        migrations.AddIndex(
            model_name='productformula',
            index=models.Index(fields=['final_product'], name='idx_product_formula_final_prod'),
        ),
        migrations.AddIndex(
            model_name='productformula',
            index=models.Index(fields=['is_active'], name='idx_product_formula_is_active'),
        ),
        migrations.AddIndex(
            model_name='productformula',
            index=models.Index(fields=['created_by'], name='idx_product_formula_created_by'),
        ),
        migrations.AddIndex(
            model_name='productformula',
            index=models.Index(fields=['created_at'], name='idx_product_formula_created_at'),
        ),
        migrations.AddIndex(
            model_name='productformula',
            index=models.Index(fields=['updated_at'], name='idx_product_formula_updated_at'),
        ),
        migrations.AddIndex(
            model_name='productformula',
            index=models.Index(fields=['version'], name='idx_product_formula_version'),
        ),
        migrations.AlterUniqueTogether(
            name='productformula',
            unique_together={('name', 'version')},
        ),
        migrations.AddIndex(
            model_name='formulaingredient',
            index=models.Index(fields=['formula'], name='idx_formula_ingredient_formula'),
        ),
        migrations.AddIndex(
            model_name='formulaingredient',
            index=models.Index(fields=['raw_material'], name='idx_formula_ingredient_raw_mat'),
        ),
        migrations.AddIndex(
            model_name='formulaingredient',
            index=models.Index(fields=['unit'], name='idx_formula_ingredient_unit'),
        ),
        migrations.AlterUniqueTogether(
            name='formulaingredient',
            unique_together={('formula', 'raw_material')},
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['batch_number'], name='idx_prod_batch_number'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['formula'], name='idx_production_batch_formula'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['branch'], name='idx_production_batch_branch'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['scheduled_date'], name='idx_prod_batch_scheduled'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['start_date'], name='idx_prod_batch_start'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['end_date'], name='idx_prod_batch_end'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['status'], name='idx_prod_batch_status'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['created_by'], name='idx_prod_batch_created_by'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['supervisor'], name='idx_prod_batch_supervisor'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['created_at'], name='idx_prod_batch_created'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['updated_at'], name='idx_prod_batch_updated'),
        ),
        migrations.AddIndex(
            model_name='batchrawmaterial',
            index=models.Index(fields=['batch'], name='idx_batch_raw_material_batch'),
        ),
        migrations.AddIndex(
            model_name='batchrawmaterial',
            index=models.Index(fields=['raw_material'], name='idx_batch_raw_mat_raw_mat'),
        ),
        migrations.AddIndex(
            model_name='batchrawmaterial',
            index=models.Index(fields=['unit'], name='idx_batch_raw_material_unit'),
        ),
        migrations.AlterUniqueTogether(
            name='batchrawmaterial',
            unique_together={('batch', 'raw_material')},
        ),
        migrations.AddIndex(
            model_name='qualitycheck',
            index=models.Index(fields=['batch'], name='idx_quality_check_batch'),
        ),
        migrations.AddIndex(
            model_name='qualitycheck',
            index=models.Index(fields=['check_date'], name='idx_quality_check_check_date'),
        ),
        migrations.AddIndex(
            model_name='qualitycheck',
            index=models.Index(fields=['inspector'], name='idx_quality_check_inspector'),
        ),
        migrations.AddIndex(
            model_name='qualitycheck',
            index=models.Index(fields=['result'], name='idx_quality_check_result'),
        ),
        migrations.AddIndex(
            model_name='qualitycheck',
            index=models.Index(fields=['created_at'], name='idx_quality_check_created_at'),
        ),
        migrations.AddIndex(
            model_name='rawmaterialusage',
            index=models.Index(fields=['finished_product'], name='idx_raw_mat_usage_finished'),
        ),
        migrations.AddIndex(
            model_name='rawmaterialusage',
            index=models.Index(fields=['raw_material'], name='idx_raw_mat_usage_raw_mat'),
        ),
        migrations.AddIndex(
            model_name='rawmaterialusage',
            index=models.Index(fields=['transaction_type'], name='idx_raw_mat_usage_txn_type'),
        ),
        migrations.AddIndex(
            model_name='rawmaterialusage',
            index=models.Index(fields=['transaction_date'], name='idx_raw_mat_usage_txn_date'),
        ),
        migrations.AddIndex(
            model_name='rawmaterialusage',
            index=models.Index(fields=['created_at'], name='idx_raw_mat_usage_created'),
        ),
        migrations.AlterUniqueTogether(
            name='rawmaterialusage',
            unique_together={('finished_product', 'raw_material', 'transaction_date')},
        ),
    ]
