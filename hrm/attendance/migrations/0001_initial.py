# Generated by Django 5.2.7 on 2025-10-25 21:43

import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.localdate)),
                ('check_in', models.DateTimeField(blank=True, null=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('biometric_id', models.CharField(blank=True, help_text='Biometric device/user ID for attendance capture', max_length=100, null=True)),
                ('gps_latitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS latitude at check-in/out', max_digits=9, null=True)),
                ('gps_longitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS longitude at check-in/out', max_digits=9, null=True)),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('half-day', 'Half Day')], default='present', max_length=20)),
                ('total_seconds_worked', models.PositiveIntegerField(default=0)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'hrm_attendance_records',
                'ordering': ['-date', 'employee_id'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the attendance rule', max_length=100)),
                ('rule_type', models.CharField(choices=[('late_policy', 'Late Arrival Policy'), ('overtime_policy', 'Overtime Policy'), ('absenteeism_policy', 'Absenteeism Policy'), ('work_hours_policy', 'Work Hours Policy'), ('break_policy', 'Break Time Policy'), ('holiday_policy', 'Holiday Policy')], max_length=30)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the rule', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this rule is currently active')),
                ('priority', models.PositiveIntegerField(default=100, help_text='Priority order for rule application (higher = more important)')),
                ('late_threshold_minutes', models.PositiveIntegerField(default=15, help_text='Minutes after shift start time to consider as late')),
                ('late_penalty_type', models.CharField(choices=[('warning', 'Warning'), ('deduction', 'Salary Deduction'), ('disciplinary', 'Disciplinary Action'), ('none', 'No Penalty')], default='warning', max_length=20)),
                ('late_penalty_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Penalty value (amount or percentage)', max_digits=5)),
                ('overtime_threshold_hours', models.DecimalField(decimal_places=2, default=Decimal('8.00'), help_text='Hours after which overtime applies', max_digits=4)),
                ('overtime_rate_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.50'), help_text='Overtime pay rate multiplier', max_digits=3)),
                ('max_overtime_hours', models.DecimalField(decimal_places=2, default=Decimal('4.00'), help_text='Maximum overtime hours per day', max_digits=4)),
                ('consecutive_absent_threshold', models.PositiveIntegerField(default=3, help_text='Consecutive absent days to trigger action')),
                ('monthly_absent_threshold', models.PositiveIntegerField(default=5, help_text='Monthly absent days to trigger action')),
                ('absenteeism_action', models.CharField(choices=[('warning', 'Warning'), ('suspension', 'Suspension'), ('termination', 'Termination Review'), ('none', 'No Action')], default='warning', max_length=20)),
                ('standard_work_hours', models.DecimalField(decimal_places=2, default=Decimal('8.00'), help_text='Standard work hours per day', max_digits=4)),
                ('min_work_hours', models.DecimalField(decimal_places=2, default=Decimal('6.00'), help_text='Minimum work hours to count as full day', max_digits=4)),
                ('max_work_hours', models.DecimalField(decimal_places=2, default=Decimal('12.00'), help_text='Maximum work hours per day', max_digits=4)),
                ('break_duration_minutes', models.PositiveIntegerField(default=60, help_text='Total break time in minutes per day')),
                ('break_intervals', models.JSONField(default=list, help_text='Break intervals in minutes (e.g., [30, 30] for two 30-min breaks)')),
                ('public_holidays', models.JSONField(default=list, help_text='List of public holidays (dates)')),
                ('holiday_pay_multiplier', models.DecimalField(decimal_places=2, default=Decimal('2.00'), help_text='Holiday work pay multiplier', max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'hrm_attendance_rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ESSSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_shift_based_restrictions', models.BooleanField(default=True, help_text='When enabled, employees can only login during their assigned shift working days (excluding off days and leave)', verbose_name='Enable Shift-Based Login Restrictions')),
                ('allow_payslip_view', models.BooleanField(default=True, help_text='Allow employees to view and download their payslips', verbose_name='Allow Payslip View')),
                ('allow_leave_application', models.BooleanField(default=True, help_text='Allow employees to submit leave requests', verbose_name='Allow Leave Application')),
                ('allow_timesheet_application', models.BooleanField(default=False, help_text='Allow employees to submit timesheets', verbose_name='Allow Timesheet Application')),
                ('allow_overtime_application', models.BooleanField(default=False, help_text='Allow employees to apply for overtime', verbose_name='Allow Overtime Application')),
                ('allow_advance_salary_application', models.BooleanField(default=False, help_text='Allow employees to request salary advances', verbose_name='Allow Advance Salary Application')),
                ('allow_losses_damage_submission', models.BooleanField(default=False, help_text='Allow employees to report losses and damages', verbose_name='Allow Losses/Damage Submission')),
                ('allow_expense_claims_application', models.BooleanField(default=False, help_text='Allow employees to submit expense claim requests', verbose_name='Allow Expense Claims Application')),
                ('require_password_change_on_first_login', models.BooleanField(default=True, help_text='Force employees to change their password on first ESS login', verbose_name='Require Password Change on First Login')),
                ('session_timeout_minutes', models.PositiveIntegerField(default=60, help_text='Number of minutes before an inactive ESS session expires', verbose_name='Session Timeout (Minutes)')),
                ('allow_weekend_login', models.BooleanField(default=False, help_text='Override shift restrictions and allow login on weekends for all employees', verbose_name='Allow Weekend Login')),
                ('max_failed_login_attempts', models.PositiveIntegerField(default=5, help_text='Number of failed login attempts before account is locked', verbose_name='Max Failed Login Attempts')),
                ('account_lockout_duration_minutes', models.PositiveIntegerField(default=30, help_text='Duration to lock account after max failed login attempts', verbose_name='Account Lockout Duration (Minutes)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ESS Settings',
                'verbose_name_plural': 'ESS Settings',
                'db_table': 'ess_settings',
            },
        ),
        migrations.CreateModel(
            name='OffDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'hrm_off_days',
            },
        ),
        migrations.CreateModel(
            name='ShiftRotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('run_duration', models.PositiveIntegerField(default=2, help_text='Duration to run each shift')),
                ('run_unit', models.CharField(choices=[('Day', 'Day'), ('Days', 'Days'), ('Week', 'Week'), ('Weeks', 'Weeks'), ('Month', 'Month'), ('Months', 'Months')], default='Months', max_length=20)),
                ('break_duration', models.PositiveIntegerField(default=1, help_text='Break duration between shifts')),
                ('break_unit', models.CharField(choices=[('Day', 'Day'), ('Days', 'Days'), ('Week', 'Week'), ('Weeks', 'Weeks'), ('Month', 'Month'), ('Months', 'Months')], default='Day', max_length=20)),
                ('next_change_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Shift Rotation',
                'verbose_name_plural': 'Shift Rotations',
                'db_table': 'hrm_shift_rotations',
            },
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField(help_text='Start date of timesheet period')),
                ('period_end', models.DateField(help_text='End date of timesheet period')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('total_hours', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Timesheet',
                'verbose_name_plural': 'Timesheets',
                'ordering': ['-period_start', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimesheetEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('task_description', models.TextField()),
                ('regular_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('break_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Timesheet Entry',
                'verbose_name_plural': 'Timesheet Entries',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='WorkShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_time', models.TimeField(blank=True, help_text='Legacy: Default start time', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='Legacy: Default end time', null=True)),
                ('grace_minutes', models.PositiveIntegerField(default=0, help_text='Grace period for late arrivals in minutes')),
                ('total_hours_per_week', models.DecimalField(decimal_places=2, default=Decimal('40.00'), help_text='Total expected work hours per week', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'hrm_work_shifts',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WorkShiftSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField(help_text='Shift start time for this day')),
                ('end_time', models.TimeField(help_text='Shift end time for this day')),
                ('break_hours', models.DecimalField(decimal_places=1, default=Decimal('0.0'), help_text='Break hours for this day', max_digits=3)),
                ('is_working_day', models.BooleanField(default=True, help_text='Whether this is a working day')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'hrm_work_shift_schedules',
                'ordering': ['work_shift', 'day'],
            },
        ),
    ]
