# Generated by Django 5.2 on 2025-09-11 07:49

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        ('payroll_settings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False)),
                ('issue_date', models.DateField()),
                ('prev_payment_date', models.DateField(blank=True, null=True)),
                ('next_payment_date', models.DateField()),
                ('amount_issued', models.DecimalField(decimal_places=2, default=0, help_text='Auto calculated field', max_digits=14)),
                ('amount_repaid', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Auto calculated field', max_digits=14, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advances', to='employees.employee')),
                ('repay_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='advances', to='payroll_settings.repayoption')),
            ],
            options={
                'verbose_name_plural': 'Employee Advances',
                'db_table': 'employee_advances',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Benefits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('benefit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='payroll_settings.payrollcomponents')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Employee Benefits',
                'db_table': 'employee_benefits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deductions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_to_date', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('quantity', models.DecimalField(decimal_places=4, default=0, help_text='Quantity per amount chargable, leave default if using fixed amount', max_digits=10)),
                ('amount', models.DecimalField(decimal_places=4, default=0, help_text='Fixed or per quantity', max_digits=14)),
                ('employer_amount', models.DecimalField(decimal_places=4, default=0, help_text='Fixed or percentage og Basic Pay', max_digits=14)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('deduction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deductions', to='payroll_settings.payrollcomponents')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deductions', to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Employee Deductions',
                'db_table': 'employee_deductions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Earnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, default=0, help_text='Quantity per amount chargable, leave default if using fixed amount', max_digits=10)),
                ('rate', models.DecimalField(decimal_places=4, default=0, help_text='Rate', max_digits=10)),
                ('amount', models.DecimalField(decimal_places=4, default=0, help_text='Fixed or per quantity', max_digits=14)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('earning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='payroll_settings.payrollcomponents')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Employee Earnings',
                'db_table': 'employee_earnings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeLoans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principal_amount', models.DecimalField(decimal_places=4, default=0.0, max_digits=14)),
                ('amount_repaid', models.DecimalField(decimal_places=4, default=0.0, max_digits=14)),
                ('interest_paid', models.DecimalField(decimal_places=4, default=0.0, max_digits=14)),
                ('no_of_installments_paid', models.PositiveIntegerField(default=0)),
                ('monthly_installment', models.DecimalField(decimal_places=4, default=0.0, max_digits=14)),
                ('interest_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('interest_formula', models.CharField(blank=True, choices=[('Reducing Balance', 'Reducing Balance'), ('Fixed', 'Fixed')], default=None, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employeeloans', to='employees.employee')),
                ('fringe_benefit_tax', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='employee_loans', to='payroll_settings.formulas')),
                ('loan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employeeloans', to='payroll_settings.loans')),
            ],
            options={
                'verbose_name_plural': 'Employee Loans',
                'db_table': 'employee_loans',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ExpenseClaims',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False)),
                ('category', models.CharField(choices=[('Other', 'Other'), ('Mileage', 'Mileage')], max_length=100)),
                ('application_date', models.DateField()),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='claim_attachments')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('is_active', models.BooleanField(default=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('schedule_to_payroll', models.BooleanField(default=False)),
                ('delete_status', models.BooleanField(default=False)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_claims', to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Expense Claims',
                'db_table': 'employee_expense_claims',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClaimItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_type', models.CharField(choices=[('tt', 'Travel Tickets'), ('ac', 'Accommodation'), ('ml', 'Meals'), ('jm', 'Job Materials'), ('os', 'Office Supplies')], max_length=100)),
                ('application_date', models.DateField()),
                ('description', models.TextField()),
                ('place_from', models.CharField(blank=True, help_text='Only applies for millage claims', max_length=100, null=True)),
                ('place_to', models.CharField(blank=True, help_text='Only applies for millage claims', max_length=100, null=True)),
                ('quantity_or_distance', models.FloatField()),
                ('unit_cost_or_rate', models.FloatField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_categories', to='payroll.expenseclaims')),
            ],
            options={
                'verbose_name_plural': 'Claim Items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LossesAndDamages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=1500, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('issue_date', models.DateField()),
                ('prev_payment_date', models.DateField(blank=True, null=True)),
                ('next_payment_date', models.DateField()),
                ('damage_amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('amount_repaid', models.DecimalField(decimal_places=2, max_digits=14)),
                ('is_active', models.BooleanField(default=False)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loss_damages', to='employees.employee')),
                ('repay_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lossdamages', to='payroll_settings.repayoption')),
            ],
            options={
                'verbose_name_plural': 'Losses & Damages',
                'db_table': 'employee_losses_and_damages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payslip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_pay', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total gross pay before deductions', max_digits=10)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total earnings and benefits', max_digits=10)),
                ('net_pay', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Final net pay after all deductions', max_digits=10)),
                ('taxable_pay', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Pay subject to tax calculation', max_digits=10)),
                ('paye', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Pay As You Earn tax amount', max_digits=10)),
                ('tax_relief', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Personal relief amount', max_digits=10)),
                ('reliefs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total tax reliefs applied', max_digits=10)),
                ('gross_pay_after_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Gross pay after tax deductions', max_digits=10)),
                ('shif_or_nhif_contribution', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='NHIF contribution amount (legacy)', max_digits=10)),
                ('housing_levy', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Housing Levy amount', max_digits=10)),
                ('nssf_employee_tier_1', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='NSSF Tier 1 contribution', max_digits=10)),
                ('nssf_employee_tier_2', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='NSSF Tier 2 contribution', max_digits=10)),
                ('nssf_employer_contribution', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='NSSF employer contribution', max_digits=10)),
                ('deductions_before_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total deductions applied before tax calculation', max_digits=10)),
                ('deductions_after_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total deductions applied after tax calculation', max_digits=10)),
                ('deductions_after_paye', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total deductions applied after PAYE calculation', max_digits=10)),
                ('deductions_final', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Final deductions (non-cash benefits, etc.)', max_digits=10)),
                ('payment_period', models.DateField(blank=True, null=True)),
                ('payroll_status', models.CharField(choices=[('complete', 'Complete'), ('expired', 'Expired'), ('processing', 'Processing'), ('queued', 'Queued')], default='queued', max_length=100)),
                ('approval_status', models.CharField(choices=[('complete', 'Complete'), ('expired', 'Expired'), ('processing', 'Processing'), ('queued', 'Queued')], default='draft', max_length=100)),
                ('published', models.BooleanField(default=False)),
                ('payroll_date', models.DateField(auto_now=True)),
                ('period_start', models.DateField(blank=True, null=True)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('kra_paye_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('kra_filed_at', models.DateTimeField(blank=True, null=True)),
                ('delete_status', models.BooleanField(default=False)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payslip_approver', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payslip_creator', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Payslips',
                'db_table': 'payslips',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PayslipAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('Created', 'Created'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Nulled', 'Nulled'), ('Draft', 'Draft')], max_length=50)),
                ('action_date', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('action_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payslip_audits', to=settings.AUTH_USER_MODEL)),
                ('payslip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payslips', to='payroll.payslip')),
            ],
        ),
        migrations.AddIndex(
            model_name='payslip',
            index=models.Index(fields=['employee'], name='idx_payslip_employee'),
        ),
        migrations.AddIndex(
            model_name='payslip',
            index=models.Index(fields=['payment_period'], name='idx_payslip_period'),
        ),
    ]
