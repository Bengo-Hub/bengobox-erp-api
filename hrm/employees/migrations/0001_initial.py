# Generated by Django 5.2 on 2025-09-11 07:49

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('passport_photo', models.ImageField(blank=True, null=True, upload_to='passports')),
                ('date_of_birth', models.DateField()),
                ('residential_status', models.CharField(choices=[('Resident', 'Resident'), ('Non-Resident', 'Non-Resident')], max_length=50)),
                ('national_id', models.CharField(max_length=20, unique=True, verbose_name='National ID')),
                ('pin_no', models.CharField(max_length=16)),
                ('shif_or_nhif_number', models.CharField(blank=True, help_text='SHIF number (2024+) or NHIF number (pre-2024)', max_length=16, null=True, verbose_name='SHIF/NHIF Number')),
                ('nssf_no', models.CharField(max_length=16)),
                ('deleted', models.BooleanField(default=False)),
                ('terminated', models.BooleanField(default=False)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='business.bussiness')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee ESS')),
            ],
            options={
                'verbose_name_plural': 'Employees',
                'db_table': 'employee',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='Employee Documents')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Documents',
                'db_table': 'employee_documents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_start_date', models.DateField()),
                ('contract_end_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('terminated', 'Terminated'), ('expired', 'Expired')], default='active', max_length=100)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=14)),
                ('pay_type', models.CharField(choices=[('basic', 'Basic Pay'), ('gross', 'Gross Pay(Incl. Benefits(computed))'), ('consolidated', 'Consolidated Pay(Incl. Benefits(non-computed))'), ('net_pay', 'Net Pay')], max_length=100)),
                ('contract_duration', models.DecimalField(blank=True, decimal_places=2, help_text='Duration In Days. This is an auto calculated field. DO NOT FILL!', max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='employees.employee')),
            ],
            options={
                'ordering': ['contract_start_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal_email', models.EmailField(max_length=254, unique=True)),
                ('country', django_countries.fields.CountryField(blank=True, default='KE', max_length=255, null=True)),
                ('county', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255, verbose_name='City/Town')),
                ('zip', models.CharField(max_length=6, verbose_name='Zip/Postal Code')),
                ('address', models.TextField()),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(default='+254743793901', max_length=128, region=None, validators=[django.core.validators.RegexValidator(message='Please enter a valid Kenyan phone number.', regex='^(?:\\+?254|0)(?:\\d{9}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{2}\\s\\d{3}\\s\\d{3})$')])),
                ('official_phone', phonenumber_field.modelfields.PhoneNumberField(default='+254743793901', max_length=128, region=None, validators=[django.core.validators.RegexValidator(message='Please enter a valid Kenyan phone number.', regex='^(?:\\+?254|0)(?:\\d{9}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{2}\\s\\d{3}\\s\\d{3})$')])),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Contact Details',
                'db_table': 'employee_contact_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(help_text='Account holder name as it appears in bank records', max_length=255)),
                ('account_number', models.CharField(help_text='Bank account number', max_length=20)),
                ('account_type', models.CharField(choices=[('savings', 'Savings Account'), ('current', 'Current Account'), ('checking', 'Checking Account'), ('salary', 'Salary Account')], default='savings', max_length=20)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary account for salary payments')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('closed', 'Closed')], default='active', max_length=20)),
                ('is_verified', models.BooleanField(default=False, help_text='Whether account details have been verified')),
                ('opened_date', models.DateField(blank=True, help_text='Date account was opened', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_accounts', to='core.bankbranches')),
                ('bank_institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_accounts', to='core.bankinstitution')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Employee Bank Account',
                'verbose_name_plural': 'Employee Bank Accounts',
                'db_table': 'employee_bank_accounts',
            },
        ),
        migrations.CreateModel(
            name='JobTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'jobtitles',
                'managed': True,
                'indexes': [models.Index(fields=['title'], name='idx_job_title_title')],
            },
        ),
        migrations.CreateModel(
            name='HRDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_or_staff_number', models.CharField(max_length=100, verbose_name='Job/Staff Number')),
                ('date_of_employment', models.DateField()),
                ('board_director', models.BooleanField(default=False)),
                ('branch', models.ForeignKey(blank=True, help_text='Branch where employee works', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_details', to='business.branch')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_details_department', to='core.departments')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hr_details', to='employees.employee')),
                ('head_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_details_head_of', to='core.departments')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_details', to='core.projects')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_details', to='core.regions')),
                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_details_reports_to', to='employees.employee')),
                ('job_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hr_details_job_title', to='employees.jobtitle')),
            ],
            options={
                'verbose_name_plural': 'HR Details',
                'db_table': 'employee_hr_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NextOfKin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('relation', models.CharField(max_length=255)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(default='254743793901', max_length=128, region=None, validators=[django.core.validators.RegexValidator(message='Please enter a valid Kenyan phone number.', regex='^(?:\\+?254|0)(?:\\d{9}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{2}\\s\\d{3}\\s\\d{3})$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kins', to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Next Of Kins',
                'db_table': 'employee_kin_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SalaryDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_type', models.CharField(choices=[('regular-open', 'Regular(open-ended)'), ('regular-fixed', 'Regular(fixed-term)'), ('intern', 'Intern'), ('probationary', 'Probationary'), ('casual', 'Casual'), ('consultant', 'Consultant')], max_length=100)),
                ('payment_currency', models.CharField(default='KES', max_length=10)),
                ('monthly_salary', models.DecimalField(decimal_places=2, max_digits=14)),
                ('pay_type', models.CharField(choices=[('basic', 'Basic Pay'), ('gross', 'Gross Pay(Incl. Benefits(computed))'), ('consolidated', 'Consolidated Pay(Incl. Benefits(non-computed))'), ('net_pay', 'Net Pay')], default='gross', max_length=100)),
                ('work_hours', models.IntegerField(default=8)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, help_text='auto calculated field', max_digits=14, null=True)),
                ('daily_rate', models.DecimalField(blank=True, decimal_places=2, help_text='auto calculated field', max_digits=14, null=True)),
                ('income_tax', models.CharField(choices=[('primary', 'P.A.Y.E Primary Employee'), ('secondary', 'P.A.Y.E Secondary Employee')], default='primary', max_length=200)),
                ('deduct_shif_or_nhif', models.BooleanField(blank=True, default=True, help_text='Whether to deduct SHIF (2024+) or NHIF (pre-2024)', null=True, verbose_name='Deduct SHIF/NHIF')),
                ('deduct_nssf', models.BooleanField(default=True)),
                ('tax_excemption_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('excemption_cert_no', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_type', models.CharField(choices=[('bank', 'Bank Transfer'), ('mobile_payment', 'Mobile Money'), ('cash', 'Cash'), ('cheque', 'Cheque')], default='bank', help_text='Leave all fields below blank if cash or cheque is selected', max_length=50)),
                ('mobile_number', models.CharField(blank=True, help_text='Only fill if payment option is Mobile Money', max_length=15, null=True)),
                ('bank_account', models.ForeignKey(blank=True, help_text='Primary bank account for salary payments', null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employeebankaccount')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_details', to='employees.employee')),
            ],
            options={
                'verbose_name_plural': 'Salary Details',
                'db_table': 'employee_salary_details',
                'managed': True,
            },
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['user'], name='idx_employee_user'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['organisation'], name='idx_employee_organisation'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['gender'], name='idx_employee_gender'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['date_of_birth'], name='idx_employee_dob'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['national_id'], name='idx_employee_national_id'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['pin_no'], name='idx_employee_pin_no'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['deleted'], name='idx_employee_deleted'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['terminated'], name='idx_employee_terminated'),
        ),
        migrations.AddIndex(
            model_name='documents',
            index=models.Index(fields=['employee'], name='idx_documents_employee'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['employee'], name='idx_contract_employee'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['contract_start_date'], name='idx_emp_contract_start'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['contract_end_date'], name='idx_emp_contract_end'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['status'], name='idx_emp_contract_status'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['pay_type'], name='idx_contract_pay_type'),
        ),
        migrations.AddIndex(
            model_name='contactdetails',
            index=models.Index(fields=['employee'], name='idx_contact_details_employee'),
        ),
        migrations.AddIndex(
            model_name='contactdetails',
            index=models.Index(fields=['personal_email'], name='idx_contact_details_email'),
        ),
        migrations.AddIndex(
            model_name='contactdetails',
            index=models.Index(fields=['country'], name='idx_contact_details_country'),
        ),
        migrations.AddIndex(
            model_name='contactdetails',
            index=models.Index(fields=['county'], name='idx_contact_details_county'),
        ),
        migrations.AddIndex(
            model_name='contactdetails',
            index=models.Index(fields=['city'], name='idx_contact_details_city'),
        ),
        migrations.AddIndex(
            model_name='employeebankaccount',
            index=models.Index(fields=['employee'], name='idx_emp_bank_account_employee'),
        ),
        migrations.AddIndex(
            model_name='employeebankaccount',
            index=models.Index(fields=['bank_institution'], name='idx_emp_bank_account_bank'),
        ),
        migrations.AddIndex(
            model_name='employeebankaccount',
            index=models.Index(fields=['account_number'], name='idx_emp_bank_account_number'),
        ),
        migrations.AddIndex(
            model_name='employeebankaccount',
            index=models.Index(fields=['is_primary'], name='idx_emp_bank_account_primary'),
        ),
        migrations.AddIndex(
            model_name='employeebankaccount',
            index=models.Index(fields=['status'], name='idx_emp_bank_account_status'),
        ),
        migrations.AlterUniqueTogether(
            name='employeebankaccount',
            unique_together={('employee', 'account_number', 'bank_institution')},
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['employee'], name='idx_hr_details_employee'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['job_or_staff_number'], name='idx_hr_details_job_number'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['job_title'], name='idx_hr_details_job_title'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['department'], name='idx_hr_details_department'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['head_of'], name='idx_hr_details_head_of'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['reports_to'], name='idx_hr_details_reports_to'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['region'], name='idx_hr_details_region'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['branch'], name='idx_hr_details_branch'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['project'], name='idx_hr_details_project'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['date_of_employment'], name='idx_hr_details_employment_date'),
        ),
        migrations.AddIndex(
            model_name='hrdetails',
            index=models.Index(fields=['board_director'], name='idx_hr_details_board_director'),
        ),
        migrations.AddIndex(
            model_name='nextofkin',
            index=models.Index(fields=['employee'], name='idx_next_of_kin_employee'),
        ),
        migrations.AddIndex(
            model_name='nextofkin',
            index=models.Index(fields=['name'], name='idx_next_of_kin_name'),
        ),
        migrations.AddIndex(
            model_name='nextofkin',
            index=models.Index(fields=['relation'], name='idx_next_of_kin_relation'),
        ),
        migrations.AddIndex(
            model_name='nextofkin',
            index=models.Index(fields=['email'], name='idx_next_of_kin_email'),
        ),
        migrations.AddIndex(
            model_name='salarydetails',
            index=models.Index(fields=['employee'], name='idx_salary_details_employee'),
        ),
        migrations.AddIndex(
            model_name='salarydetails',
            index=models.Index(fields=['employment_type'], name='idx_salary_details_emp_type'),
        ),
        migrations.AddIndex(
            model_name='salarydetails',
            index=models.Index(fields=['payment_currency'], name='idx_salary_details_currency'),
        ),
        migrations.AddIndex(
            model_name='salarydetails',
            index=models.Index(fields=['pay_type'], name='idx_salary_details_pay_choice'),
        ),
        migrations.AddIndex(
            model_name='salarydetails',
            index=models.Index(fields=['income_tax'], name='idx_salary_details_income_tax'),
        ),
        migrations.AddIndex(
            model_name='salarydetails',
            index=models.Index(fields=['payment_type'], name='idx_salary_details_pay_type'),
        ),
        migrations.AddIndex(
            model_name='salarydetails',
            index=models.Index(fields=['bank_account'], name='idx_salary_details_bank_acc'),
        ),
    ]
