# Generated by Django 5.2 on 2025-09-11 07:49

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('approvals', '0002_initial'),
        ('business', '0001_initial'),
        ('contacts', '0001_initial'),
        ('core_orders', '0001_initial'),
        ('pos', '0001_initial'),
        ('stockinventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_id', models.CharField(blank=True, max_length=100, null=True)),
                ('purchase_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Specify precentage value', max_digits=14)),
                ('purchase_discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Specify precentage value or Fixed value', max_digits=14)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('purchase_ammount', models.DecimalField(decimal_places=2, default=0.0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('balance_due', models.DecimalField(decimal_places=2, default=0.0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('balance_overdue', models.DecimalField(decimal_places=2, default=0.0, help_text='Auto calculated field. Do not fill.', max_digits=14, verbose_name='Balance Owed')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('purchase_shipping_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('additional_expenses', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('purchase_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('received', 'Rceived'), ('ordered', 'Ordered')], default='pending', max_length=20, null=True)),
                ('payment_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('due', 'Due'), ('partial', 'Partial'), ('paid', 'Paid')], default='pending', max_length=20, null=True)),
                ('paymethod', models.CharField(blank=True, choices=[('cash', 'Cash'), ('mpesa', 'Mpesa'), ('card', 'Card')], default='cash', max_length=20, null=True)),
                ('delete_status', models.BooleanField(default=False)),
                ('workflow_status', models.CharField(choices=[('pending', 'Pending'), ('received', 'Received'), ('quality_check', 'Quality Check'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases', to=settings.AUTH_USER_MODEL)),
                ('approvals', models.ManyToManyField(blank=True, related_name='purchases', to='approvals.approval')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='business.branch')),
                ('pay_term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases', to='pos.payterm')),
                ('purchase_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase', to='core_orders.baseorder')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases', to='contacts.contact')),
            ],
            options={
                'verbose_name': 'Purchases',
                'verbose_name_plural': 'Purchases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PurchaseItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=0)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, help_text='Specify precentage value or Fixed value', max_digits=14)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseitems', to='purchases.purchase')),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseitems', to='stockinventory.stockinventory', verbose_name='Purchasse Item')),
            ],
            options={
                'verbose_name': 'Purchase Items',
                'verbose_name_plural': 'Purchase Items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PurchaseReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_id', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('date_returned', models.DateTimeField(auto_now_add=True)),
                ('return_amount', models.DecimalField(decimal_places=2, default=0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('return_amount_due', models.DecimalField(decimal_places=2, default=0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('payment_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('due', 'Due'), ('partial', 'Partial'), ('paid', 'Paid')], default='pending', max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_returns', to=settings.AUTH_USER_MODEL)),
                ('original_purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_returns', to='purchases.purchase')),
            ],
            options={
                'verbose_name_plural': 'Purchase Returns',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseReturnedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField()),
                ('sub_total', models.DecimalField(decimal_places=2, default=0, help_text='Auto calculated field. Do not fill.', max_digits=14)),
                ('return_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_return_items', to='purchases.purchasereturn')),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_return_items', to='stockinventory.stockinventory')),
            ],
            options={
                'verbose_name_plural': 'Purchase Return Items',
                'ordering': ['-id'],
            },
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['branch'], name='idx_purchase_branch'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['supplier'], name='idx_purchase_supplier'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['added_by'], name='idx_purchase_added_by'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['purchase_id'], name='idx_purchase_purchase_id'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['date_added'], name='idx_purchase_date_added'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['date_updated'], name='idx_purchase_date_updated'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['purchase_status'], name='idx_purchase_purchase_status'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['payment_status'], name='idx_purchase_payment_status'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['paymethod'], name='idx_purchase_paymethod'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['delete_status'], name='idx_purchase_delete_status'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['purchase_order'], name='idx_purchase_purchase_order'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['workflow_status'], name='idx_purchase_workflow_status'),
        ),
        migrations.AddIndex(
            model_name='purchaseitems',
            index=models.Index(fields=['purchase'], name='idx_purchase_items_purchase'),
        ),
        migrations.AddIndex(
            model_name='purchaseitems',
            index=models.Index(fields=['stock_item'], name='idx_purchase_items_stock_item'),
        ),
        migrations.AddIndex(
            model_name='purchaseitems',
            index=models.Index(fields=['date_added'], name='idx_purchase_items_date_added'),
        ),
        migrations.AddIndex(
            model_name='purchaseitems',
            index=models.Index(fields=['date_updated'], name='idx_purchase_items_updated'),
        ),
        migrations.AddIndex(
            model_name='purchasereturn',
            index=models.Index(fields=['added_by'], name='idx_purchase_return_added_by'),
        ),
        migrations.AddIndex(
            model_name='purchasereturn',
            index=models.Index(fields=['return_id'], name='idx_purchase_return_return_id'),
        ),
        migrations.AddIndex(
            model_name='purchasereturn',
            index=models.Index(fields=['original_purchase'], name='idx_purchase_return_original'),
        ),
        migrations.AddIndex(
            model_name='purchasereturn',
            index=models.Index(fields=['date_returned'], name='idx_purchase_return_returned'),
        ),
        migrations.AddIndex(
            model_name='purchasereturn',
            index=models.Index(fields=['payment_status'], name='idx_purchase_return_pay_status'),
        ),
        migrations.AddIndex(
            model_name='purchasereturneditem',
            index=models.Index(fields=['return_record'], name='idx_purchase_returned_record'),
        ),
        migrations.AddIndex(
            model_name='purchasereturneditem',
            index=models.Index(fields=['stock_item'], name='idx_purchase_returned_stock'),
        ),
    ]
