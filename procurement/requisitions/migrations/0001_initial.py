# Generated by Django 5.2.7 on 2025-10-25 21:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('approvals', '0001_initial'),
        ('contacts', '0001_initial'),
        ('stockinventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProcurementRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('request_type', models.CharField(choices=[('inventory', 'Existing Inventory Item'), ('external_item', 'External Item Purchase'), ('service', 'External Service/Consultancy')], max_length=20)),
                ('purpose', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('required_by_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('procurement_review', 'Procurement Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('ordered', 'Ordered'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approvals', models.ManyToManyField(blank=True, related_name='procurement_requests', to='approvals.approval')),
                ('requester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procurement_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('inventory', 'Inventory Item'), ('external', 'External Item'), ('service', 'Service')], max_length=20)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('approved_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('urgent', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('specifications', models.TextField(blank=True)),
                ('estimated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('service_description', models.TextField(blank=True)),
                ('expected_deliverables', models.TextField(blank=True)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_items', to='contacts.contact')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='requisitions.procurementrequest')),
                ('stock_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request_items', to='stockinventory.stockinventory')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('deliverables', models.TextField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('delayed', 'Delayed')], max_length=20)),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact')),
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='requisitions.requestitem')),
            ],
        ),
        migrations.AddIndex(
            model_name='procurementrequest',
            index=models.Index(fields=['reference_number'], name='idx_procurement_request_ref'),
        ),
        migrations.AddIndex(
            model_name='procurementrequest',
            index=models.Index(fields=['requester'], name='idx_proc_request_user'),
        ),
        migrations.AddIndex(
            model_name='procurementrequest',
            index=models.Index(fields=['request_type'], name='idx_proc_request_type'),
        ),
        migrations.AddIndex(
            model_name='procurementrequest',
            index=models.Index(fields=['priority'], name='idx_proc_request_priority'),
        ),
        migrations.AddIndex(
            model_name='procurementrequest',
            index=models.Index(fields=['required_by_date'], name='idx_proc_request_required'),
        ),
        migrations.AddIndex(
            model_name='procurementrequest',
            index=models.Index(fields=['status'], name='idx_procurement_request_status'),
        ),
        migrations.AddIndex(
            model_name='procurementrequest',
            index=models.Index(fields=['created_at'], name='idx_proc_request_created'),
        ),
        migrations.AddIndex(
            model_name='procurementrequest',
            index=models.Index(fields=['updated_at'], name='idx_proc_request_updated'),
        ),
        migrations.AddIndex(
            model_name='requestitem',
            index=models.Index(fields=['request'], name='idx_request_item_request'),
        ),
        migrations.AddIndex(
            model_name='requestitem',
            index=models.Index(fields=['item_type'], name='idx_request_item_item_type'),
        ),
        migrations.AddIndex(
            model_name='requestitem',
            index=models.Index(fields=['stock_item'], name='idx_request_item_stock_item'),
        ),
        migrations.AddIndex(
            model_name='requestitem',
            index=models.Index(fields=['supplier'], name='idx_request_item_supplier'),
        ),
        migrations.AddIndex(
            model_name='requestitem',
            index=models.Index(fields=['provider'], name='idx_request_item_provider'),
        ),
        migrations.AddIndex(
            model_name='requestitem',
            index=models.Index(fields=['urgent'], name='idx_request_item_urgent'),
        ),
        migrations.AddIndex(
            model_name='servicedelivery',
            index=models.Index(fields=['request'], name='idx_service_delivery_request'),
        ),
        migrations.AddIndex(
            model_name='servicedelivery',
            index=models.Index(fields=['provider'], name='idx_service_delivery_provider'),
        ),
        migrations.AddIndex(
            model_name='servicedelivery',
            index=models.Index(fields=['start_date'], name='idx_service_delivery_start'),
        ),
        migrations.AddIndex(
            model_name='servicedelivery',
            index=models.Index(fields=['end_date'], name='idx_service_delivery_end_date'),
        ),
        migrations.AddIndex(
            model_name='servicedelivery',
            index=models.Index(fields=['status'], name='idx_service_delivery_status'),
        ),
    ]
