# Generated by Django 5.2.7 on 2025-10-25 21:43

import datetime
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('subject', models.CharField(max_length=255)),
                ('body_html', models.TextField()),
                ('body_text', models.TextField(blank=True, null=True)),
                ('category', models.CharField(default='general', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('available_variables', models.TextField(blank=True, help_text='Documentation of available template variables (e.g., {username}, {first_name}, {last_name})', null=True)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('integration_type', models.CharField(choices=[('EMAIL', 'Email Integration'), ('SMS', 'SMS Integration'), ('PUSH', 'Push Notification Integration'), ('IN_APP', 'In-App Notification Integration')], max_length=20)),
                ('provider', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=100, help_text='Higher number = higher priority')),
            ],
            options={
                'verbose_name': 'Notification Integration',
                'verbose_name_plural': 'Notification Integrations',
                'ordering': ['integration_type', '-is_default', 'priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PushTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('category', models.CharField(default='general', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('sound', models.CharField(blank=True, max_length=255, null=True)),
                ('badge', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Push Template',
                'verbose_name_plural': 'Push Templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SMSTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('content', models.TextField(help_text='Use {variable} for dynamic content')),
                ('category', models.CharField(default='general', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('available_variables', models.TextField(blank=True, help_text='Documentation of available template variables', null=True)),
            ],
            options={
                'verbose_name': 'SMS Template',
                'verbose_name_plural': 'SMS Templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SpamPreventionRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('content_filter', 'Content Filter'), ('rate_limit', 'Rate Limiting'), ('blacklist', 'Blacklist'), ('whitelist', 'Whitelist'), ('keyword_filter', 'Keyword Filter')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=100)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('patterns', models.JSONField(blank=True, default=list)),
                ('rate_limit_count', models.IntegerField(default=100)),
                ('rate_limit_period', models.IntegerField(default=3600)),
                ('rate_limit_window', models.CharField(choices=[('per_minute', 'Per Minute'), ('per_hour', 'Per Hour'), ('per_day', 'Per Day')], default='per_hour', max_length=20)),
                ('addresses', models.JSONField(blank=True, default=list)),
                ('domains', models.JSONField(blank=True, default=list)),
                ('action', models.CharField(choices=[('block', 'Block'), ('flag', 'Flag for Review'), ('quarantine', 'Quarantine'), ('allow', 'Allow'), ('rate_limit', 'Rate Limit')], default='block', max_length=20)),
            ],
            options={
                'verbose_name': 'Spam Prevention Rule',
                'verbose_name_plural': 'Spam Prevention Rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analytics_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=20)),
                ('date', models.DateField()),
                ('total_sent', models.IntegerField(default=0)),
                ('delivered', models.IntegerField(default=0)),
                ('failed', models.IntegerField(default=0)),
                ('bounced', models.IntegerField(default=0)),
                ('delivery_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('opened', models.IntegerField(default=0)),
                ('clicked', models.IntegerField(default=0)),
                ('unsubscribed', models.IntegerField(default=0)),
                ('open_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('click_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('average_response_time', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('template_name', models.CharField(blank=True, max_length=100, null=True)),
                ('campaign_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Notification Analytics',
                'verbose_name_plural': 'Notification Analytics',
                'indexes': [models.Index(fields=['analytics_type', 'date'], name='notificatio_analyti_ffaf09_idx'), models.Index(fields=['template_name'], name='notificatio_templat_92db5b_idx'), models.Index(fields=['campaign_name'], name='notificatio_campaig_218a01_idx')],
                'unique_together': {('analytics_type', 'date', 'template_name')},
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sender', models.EmailField(max_length=100)),
                ('recipients', models.TextField()),
                ('cc', models.TextField(blank=True, null=True)),
                ('bcc', models.TextField(blank=True, null=True)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed'), ('BOUNCED', 'Bounced'), ('OPENED', 'Opened'), ('CLICKED', 'Clicked')], default='PENDING', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_id', models.CharField(blank=True, max_length=255, null=True)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.emailtemplate')),
                ('integration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationintegration')),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.CharField(choices=[('SMTP', 'SMTP'), ('SENDGRID', 'SendGrid'), ('MAILGUN', 'Mailgun'), ('AMAZON_SES', 'Amazon SES'), ('MANDRILL', 'Mandrill')], default='SMTP', max_length=20)),
                ('from_email', models.EmailField(default='noreply@bengoerp.com', max_length=100)),
                ('from_name', models.CharField(default='Bengo ERP', max_length=100)),
                ('smtp_host', models.CharField(default='smtp.gmail.com', max_length=100)),
                ('smtp_port', models.IntegerField(default=587)),
                ('smtp_username', models.CharField(blank=True, max_length=100, null=True)),
                ('smtp_password', models.CharField(blank=True, max_length=255, null=True)),
                ('use_tls', models.BooleanField(default=True)),
                ('use_ssl', models.BooleanField(default=False)),
                ('fail_silently', models.BooleanField(default=False)),
                ('timeout', models.IntegerField(default=60)),
                ('api_key', models.CharField(blank=True, max_length=1500, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=1500, null=True)),
                ('api_url', models.URLField(blank=True, null=True)),
                ('integration', models.OneToOneField(limit_choices_to={'integration_type': 'EMAIL'}, on_delete=django.db.models.deletion.CASCADE, related_name='email_config', to='notifications.notificationintegration')),
            ],
            options={
                'verbose_name': 'Email Configuration',
                'verbose_name_plural': 'Email Configurations',
            },
        ),
        migrations.CreateModel(
            name='NotificationTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('test_type', models.CharField(choices=[('ab_test', 'A/B Test'), ('template_test', 'Template Test'), ('delivery_test', 'Delivery Test'), ('content_test', 'Content Test')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('variant_a', models.JSONField()),
                ('variant_b', models.JSONField()),
                ('variant_c', models.JSONField(blank=True, null=True)),
                ('total_recipients', models.IntegerField(default=0)),
                ('variant_a_recipients', models.IntegerField(default=0)),
                ('variant_b_recipients', models.IntegerField(default=0)),
                ('variant_c_recipients', models.IntegerField(default=0)),
                ('winning_variant', models.CharField(blank=True, max_length=10, null=True)),
                ('confidence_level', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('success_metric', models.CharField(default='open_rate', max_length=50)),
                ('minimum_sample_size', models.IntegerField(default=100)),
                ('significance_level', models.DecimalField(decimal_places=2, default=Decimal('0.05'), max_digits=5)),
            ],
            options={
                'verbose_name': 'Notification Test',
                'verbose_name_plural': 'Notification Tests',
                'indexes': [models.Index(fields=['test_type', 'is_active'], name='notificatio_test_ty_245386_idx'), models.Index(fields=['start_date', 'end_date'], name='notificatio_start_d_b7f2cb_idx')],
            },
        ),
        migrations.CreateModel(
            name='PushConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.CharField(choices=[('WEB_PUSH', 'Web Push'), ('FIREBASE', 'Firebase Cloud Messaging'), ('APNS', 'Apple Push Notification Service'), ('FCM', 'Firebase Cloud Messaging')], max_length=20)),
                ('firebase_server_key', models.CharField(blank=True, help_text='For Firebase', max_length=500, null=True)),
                ('firebase_project_id', models.CharField(blank=True, help_text='For Firebase', max_length=100, null=True)),
                ('apns_certificate', models.TextField(blank=True, help_text='For APNS', null=True)),
                ('apns_private_key', models.TextField(blank=True, help_text='For APNS', null=True)),
                ('apns_team_id', models.CharField(blank=True, help_text='For APNS', max_length=100, null=True)),
                ('apns_key_id', models.CharField(blank=True, help_text='For APNS', max_length=100, null=True)),
                ('integration', models.OneToOneField(limit_choices_to={'integration_type': 'PUSH'}, on_delete=django.db.models.deletion.CASCADE, related_name='push_config', to='notifications.notificationintegration')),
            ],
            options={
                'verbose_name': 'Push Configuration',
                'verbose_name_plural': 'Push Configurations',
            },
        ),
        migrations.CreateModel(
            name='PushLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed'), ('BOUNCED', 'Bounced'), ('OPENED', 'Opened'), ('CLICKED', 'Clicked')], default='PENDING', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('device_token', models.CharField(blank=True, max_length=500, null=True)),
                ('platform', models.CharField(blank=True, max_length=20, null=True)),
                ('message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_id', models.CharField(blank=True, max_length=255, null=True)),
                ('integration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationintegration')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_logs', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.pushtemplate')),
            ],
            options={
                'verbose_name': 'Push Log',
                'verbose_name_plural': 'Push Logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.CharField(choices=[('TWILIO', 'Twilio'), ('AFRICASTALKING', "Africa's Talking"), ('NEXMO', 'Nexmo/Vonage'), ('AWS_SNS', 'AWS SNS'), ('SMS_GATEWAY', 'SMS Gateway')], max_length=20)),
                ('account_sid', models.CharField(blank=True, help_text='For Twilio', max_length=1500, null=True)),
                ('auth_token', models.CharField(blank=True, help_text='For Twilio/AfricasTalking', max_length=1500, null=True)),
                ('from_number', models.CharField(blank=True, help_text='For Twilio', max_length=20, null=True)),
                ('api_key', models.CharField(blank=True, help_text='For AfricasTalking/Nexmo', max_length=1500, null=True)),
                ('api_username', models.CharField(blank=True, help_text='For AfricasTalking', max_length=100, null=True)),
                ('aws_access_key', models.CharField(blank=True, help_text='For AWS SNS', max_length=1500, null=True)),
                ('aws_secret_key', models.CharField(blank=True, help_text='For AWS SNS', max_length=1500, null=True)),
                ('aws_region', models.CharField(default='us-east-1', help_text='For AWS SNS', max_length=50)),
                ('integration', models.OneToOneField(limit_choices_to={'integration_type': 'SMS'}, on_delete=django.db.models.deletion.CASCADE, related_name='sms_config', to='notifications.notificationintegration')),
            ],
            options={
                'verbose_name': 'SMS Configuration',
                'verbose_name_plural': 'SMS Configurations',
            },
        ),
        migrations.CreateModel(
            name='SMSLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sender', models.CharField(blank=True, max_length=20, null=True)),
                ('recipient', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed'), ('BOUNCED', 'Bounced'), ('OPENED', 'Opened'), ('CLICKED', 'Clicked')], default='PENDING', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('provider', models.CharField(choices=[('TWILIO', 'Twilio'), ('AFRICASTALKING', "Africa's Talking"), ('NEXMO', 'Nexmo/Vonage'), ('AWS_SNS', 'AWS SNS'), ('SMS_GATEWAY', 'SMS Gateway')], max_length=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_id', models.CharField(blank=True, max_length=255, null=True)),
                ('integration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationintegration')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.smstemplate')),
            ],
            options={
                'verbose_name': 'SMS Log',
                'verbose_name_plural': 'SMS Logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='BounceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('communication_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=10)),
                ('recipient', models.CharField(max_length=255)),
                ('bounce_type', models.CharField(choices=[('hard', 'Hard Bounce'), ('soft', 'Soft Bounce'), ('blocked', 'Blocked'), ('spam', 'Spam Report'), ('unsubscribed', 'Unsubscribed'), ('invalid', 'Invalid Address'), ('quota_exceeded', 'Quota Exceeded'), ('temporary', 'Temporary Failure')], max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('provider_message', models.TextField(blank=True, null=True)),
                ('is_suppressed', models.BooleanField(default=False)),
                ('suppression_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('suppression_date', models.DateTimeField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('last_retry_date', models.DateTimeField(blank=True, null=True)),
                ('next_retry_date', models.DateTimeField(blank=True, null=True)),
                ('email_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.emaillog')),
                ('push_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.pushlog')),
                ('sms_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.smslog')),
            ],
            options={
                'verbose_name': 'Bounce Record',
                'verbose_name_plural': 'Bounce Records',
            },
        ),
        migrations.CreateModel(
            name='UserNotificationPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_notifications_enabled', models.BooleanField(default=True)),
                ('email_order_updates', models.BooleanField(default=True)),
                ('email_payment_alerts', models.BooleanField(default=True)),
                ('email_payroll_updates', models.BooleanField(default=True)),
                ('email_approval_requests', models.BooleanField(default=True)),
                ('email_security_alerts', models.BooleanField(default=True)),
                ('email_marketing', models.BooleanField(default=False)),
                ('email_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest'), ('monthly', 'Monthly Digest')], default='immediate', max_length=20)),
                ('sms_notifications_enabled', models.BooleanField(default=True)),
                ('sms_order_updates', models.BooleanField(default=True)),
                ('sms_payment_alerts', models.BooleanField(default=True)),
                ('sms_payroll_updates', models.BooleanField(default=True)),
                ('sms_security_alerts', models.BooleanField(default=True)),
                ('sms_marketing', models.BooleanField(default=False)),
                ('push_notifications_enabled', models.BooleanField(default=True)),
                ('push_order_updates', models.BooleanField(default=True)),
                ('push_payment_alerts', models.BooleanField(default=True)),
                ('push_payroll_updates', models.BooleanField(default=True)),
                ('push_approval_requests', models.BooleanField(default=True)),
                ('push_security_alerts', models.BooleanField(default=True)),
                ('push_marketing', models.BooleanField(default=False)),
                ('in_app_notifications_enabled', models.BooleanField(default=True)),
                ('in_app_order_updates', models.BooleanField(default=True)),
                ('in_app_payment_alerts', models.BooleanField(default=True)),
                ('in_app_payroll_updates', models.BooleanField(default=True)),
                ('in_app_approval_requests', models.BooleanField(default=True)),
                ('in_app_security_alerts', models.BooleanField(default=True)),
                ('in_app_marketing', models.BooleanField(default=False)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(default=datetime.time(22, 0))),
                ('quiet_hours_end', models.TimeField(default=datetime.time(8, 0))),
                ('preferred_language', models.CharField(default='en', max_length=10)),
                ('timezone', models.CharField(default='Africa/Nairobi', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Notification Preferences',
                'verbose_name_plural': 'User Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='InAppNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('SYSTEM', 'System Notification'), ('ORDER', 'Order Notification'), ('PAYMENT', 'Payment Notification'), ('PAYROLL', 'Payroll Notification'), ('APPROVAL', 'Approval Notification'), ('SECURITY', 'Security Notification'), ('MARKETING', 'Marketing Notification'), ('REMINDER', 'Reminder Notification')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('action_url', models.URLField(blank=True, null=True)),
                ('action_text', models.CharField(blank=True, max_length=100, null=True)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('priority', models.IntegerField(default=1, help_text='1=Low, 2=Normal, 3=High, 4=Urgent')),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_app_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'In-App Notification',
                'verbose_name_plural': 'In-App Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read'], name='notificatio_user_id_e0d69b_idx'), models.Index(fields=['notification_type'], name='notificatio_notific_802f98_idx'), models.Index(fields=['created_at'], name='notificatio_created_049860_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['status'], name='notificatio_status_18a272_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['sent_at'], name='notificatio_sent_at_5f88d6_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['template'], name='notificatio_templat_f7408e_idx'),
        ),
        migrations.AddIndex(
            model_name='pushlog',
            index=models.Index(fields=['status'], name='notificatio_status_5a63b0_idx'),
        ),
        migrations.AddIndex(
            model_name='pushlog',
            index=models.Index(fields=['sent_at'], name='notificatio_sent_at_ed2a59_idx'),
        ),
        migrations.AddIndex(
            model_name='pushlog',
            index=models.Index(fields=['user'], name='notificatio_user_id_ae1a6f_idx'),
        ),
        migrations.AddIndex(
            model_name='bouncerecord',
            index=models.Index(fields=['communication_type', 'recipient'], name='notificatio_communi_39d9cb_idx'),
        ),
        migrations.AddIndex(
            model_name='bouncerecord',
            index=models.Index(fields=['bounce_type'], name='notificatio_bounce__ff9730_idx'),
        ),
        migrations.AddIndex(
            model_name='bouncerecord',
            index=models.Index(fields=['is_suppressed'], name='notificatio_is_supp_024fab_idx'),
        ),
        migrations.AddIndex(
            model_name='bouncerecord',
            index=models.Index(fields=['created_at'], name='notificatio_created_f944d3_idx'),
        ),
        migrations.AddIndex(
            model_name='smslog',
            index=models.Index(fields=['status'], name='notificatio_status_532cc1_idx'),
        ),
        migrations.AddIndex(
            model_name='smslog',
            index=models.Index(fields=['sent_at'], name='notificatio_sent_at_98618b_idx'),
        ),
        migrations.AddIndex(
            model_name='smslog',
            index=models.Index(fields=['provider'], name='notificatio_provide_56faf2_idx'),
        ),
    ]
