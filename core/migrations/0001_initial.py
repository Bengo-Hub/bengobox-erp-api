# Generated by Django 5.2 on 2025-09-11 07:49

import datetime
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Default', max_length=255)),
                ('app_key', models.CharField(default='Nxp43nyKv9k-O9p_IBxvEzBtdk_43O7lNrvEsRSe5H0=', max_length=256)),
                ('cypher_key', models.CharField(default='Nxp43nyKv9k-O9p_IBxvEzBtdk_43O7lNrvEsRSe5H0=', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='ContractSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emai_to', models.EmailField(default='titusowuor30@gmail.com', max_length=100)),
                ('cc_emai_to', models.EmailField(default='titusowuor30@gmail.com', max_length=100)),
                ('duration', models.PositiveIntegerField(default=30, help_text='Send notifications 30 days to expiry')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Project Categories',
                'db_table': 'project_categories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ApiRequestMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=10)),
                ('path', models.CharField(max_length=512)),
                ('status_code', models.PositiveIntegerField()),
                ('duration_ms', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10)),
                ('query_count', models.PositiveIntegerField(default=0)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'API Request Metric',
                'verbose_name_plural': 'API Request Metrics',
                'db_table': 'core_api_request_metrics',
                'indexes': [models.Index(fields=['created_at'], name='idx_api_metric_created_at'), models.Index(fields=['path'], name='idx_api_metric_path'), models.Index(fields=['method'], name='idx_api_metric_method'), models.Index(fields=['status_code'], name='idx_api_metric_status')],
            },
        ),
        migrations.CreateModel(
            name='BankInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('short_code', models.CharField(max_length=10, unique=True)),
                ('swift_code', models.CharField(blank=True, max_length=11, null=True)),
                ('country', models.CharField(default='Kenya', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bank Institution',
                'verbose_name_plural': 'Bank Institutions',
                'db_table': 'bank_institutions',
                'managed': True,
                'indexes': [models.Index(fields=['name'], name='idx_bank_inst_name'), models.Index(fields=['code'], name='idx_bank_inst_code'), models.Index(fields=['short_code'], name='idx_bank_inst_short_code'), models.Index(fields=['is_active'], name='idx_bank_inst_active')],
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Yuletide Zen: Finding Balance in Festivity', max_length=255)),
                ('featured_image', models.ImageField(null=True, upload_to='Blog/featured')),
                ('excerpt', models.TextField(default="Dive into the season of joy and mindfulness with Yogi's Delight! Explore our guide on maintaining serenity amidst the festive bustle. From calming yoga routines to mindful gift-giving, discover how you can infuse your holidays with peace and positivity.")),
                ('date_created', models.DateTimeField(default=datetime.datetime(2025, 9, 11, 10, 49, 1, 724291))),
                ('published', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blog',
                'db_table': 'blog',
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=255)),
                ('parent_departyment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_departments', to='core.departments')),
            ],
            options={
                'verbose_name_plural': 'Departments',
                'db_table': 'departments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OvertimeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overtime_type', models.CharField(choices=[('Normal', 'Normal Working Days'), ('Weekend', 'Non-working Days (e.g. Weekend)'), ('Holiday', 'Holidays')], max_length=20)),
                ('overtime_rate', models.DecimalField(decimal_places=2, default=Decimal('2.00'), max_digits=5)),
                ('fixed_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['overtime_type'], name='idx_overtime_rate_type'), models.Index(fields=['is_active'], name='idx_overtime_rate_active')],
            },
        ),
        migrations.CreateModel(
            name='PartialMonthPay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prorate_option', models.CharField(choices=[('Calendar', 'Prorate Based on Calendar Days'), ('Daily Rate', 'Prorate Based on Daily Rate'), ('Full Month', 'Pay Full Month, No Prorate')], default='Calendar', max_length=20)),
                ('prorate_from_start', models.BooleanField(default=True)),
                ('carry_forward_prorated_pay', models.BooleanField(default=False)),
                ('apply_for', models.CharField(choices=[('Basic', 'Basic Pay'), ('All', 'All Pay')], default='Basic', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['prorate_option'], name='idx_partial_month_pay_option'), models.Index(fields=['is_active'], name='idx_partial_month_pay_active')],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(default='Yogis official store')),
                ('image', models.ImageField(upload_to='Blog/posts')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='core.blog')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'db_table': 'blog_posts',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.post')),
            ],
            options={
                'verbose_name': 'Post Comment',
                'verbose_name_plural': 'Post Comments',
                'db_table': 'post_comments',
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Project Code/No.')),
                ('title', models.CharField(max_length=255)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.projectcategory')),
            ],
            options={
                'verbose_name_plural': 'Projects',
                'db_table': 'projects',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QueryPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.CharField(max_length=255)),
                ('duration_ms', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10)),
                ('query_count', models.PositiveIntegerField(default=0)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Query Performance Metric',
                'verbose_name_plural': 'Query Performance Metrics',
                'db_table': 'core_query_performance_metrics',
                'indexes': [models.Index(fields=['operation'], name='idx_query_metric_operation'), models.Index(fields=['created_at'], name='idx_query_metric_created_at')],
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('parent_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_regions', to='core.regions')),
            ],
            options={
                'verbose_name_plural': 'Regions',
                'db_table': 'regions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=100, unique=True)),
                ('address', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locations', to='core.regions')),
            ],
            options={
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BankBranches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='core.bankinstitution')),
            ],
            options={
                'verbose_name': 'Bank Branch',
                'verbose_name_plural': 'Bank Branches',
                'db_table': 'bank_branches',
                'managed': True,
                'indexes': [models.Index(fields=['bank'], name='idx_bank_branches_bank'), models.Index(fields=['name'], name='idx_bank_branches_name'), models.Index(fields=['code'], name='idx_bank_branches_code'), models.Index(fields=['is_active'], name='idx_bank_branches_active')],
                'unique_together': {('bank', 'code')},
            },
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['author'], name='idx_blog_author'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['published'], name='idx_blog_published'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['date_created'], name='idx_blog_date_created'),
        ),
        migrations.AddIndex(
            model_name='departments',
            index=models.Index(fields=['code'], name='idx_departments_code'),
        ),
        migrations.AddIndex(
            model_name='departments',
            index=models.Index(fields=['title'], name='idx_departments_title'),
        ),
        migrations.AddIndex(
            model_name='departments',
            index=models.Index(fields=['parent_departyment'], name='idx_departments_parent'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['blog'], name='idx_post_blog'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['title'], name='idx_post_title'),
        ),
        migrations.AddIndex(
            model_name='comments',
            index=models.Index(fields=['user'], name='idx_comments_user'),
        ),
        migrations.AddIndex(
            model_name='comments',
            index=models.Index(fields=['post'], name='idx_comments_post'),
        ),
        migrations.AddIndex(
            model_name='projects',
            index=models.Index(fields=['code'], name='idx_projects_code'),
        ),
        migrations.AddIndex(
            model_name='projects',
            index=models.Index(fields=['title'], name='idx_projects_title'),
        ),
        migrations.AddIndex(
            model_name='projects',
            index=models.Index(fields=['category'], name='idx_projects_category'),
        ),
        migrations.AddIndex(
            model_name='regions',
            index=models.Index(fields=['code'], name='idx_regions_code'),
        ),
        migrations.AddIndex(
            model_name='regions',
            index=models.Index(fields=['name'], name='idx_regions_name'),
        ),
        migrations.AddIndex(
            model_name='regions',
            index=models.Index(fields=['parent_region'], name='idx_regions_parent'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['name'], name='idx_location_name'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['code'], name='idx_location_code'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['region'], name='idx_location_region'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['is_active'], name='idx_core_location_active'),
        ),
    ]
