# Generated by Django 5.2 on 2025-09-11 07:49

import core.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import timezone_field.fields
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(blank=True, default='KE', max_length=2, null=True)),
                ('state', django_countries.fields.CountryField(blank=True, default='KE', max_length=2, null=True)),
                ('city', models.CharField(blank=True, default='Kisumu', max_length=250, null=True)),
                ('zip_code', models.CharField(default='40100', max_length=250)),
                ('postal_code', models.CharField(default='567', max_length=250)),
                ('website', models.CharField(blank=True, default='codevertexitsolutions.com', max_length=250, null=True)),
                ('default', models.BooleanField(default=False)),
                ('county', models.CharField(blank=True, help_text='Kenyan county where location is situated', max_length=100, null=True, validators=[core.validators.validate_kenyan_county])),
                ('constituency', models.CharField(blank=True, help_text='Constituency within the county', max_length=100, null=True)),
                ('ward', models.CharField(blank=True, help_text='Ward within the constituency', max_length=100, null=True)),
                ('street_name', models.CharField(blank=True, help_text='Street name or road name', max_length=255, null=True)),
                ('building_name', models.CharField(blank=True, help_text='Building name or landmark', max_length=255, null=True)),
                ('floor_number', models.CharField(blank=True, help_text='Floor number or level', max_length=20, null=True)),
                ('room_number', models.CharField(blank=True, help_text='Room number or office number', max_length=20, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS latitude coordinate', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS longitude coordinate', max_digits=9, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this location is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Business Location',
                'verbose_name_plural': 'Business Location',
                'db_table': 'business_location',
                'indexes': [models.Index(fields=['city'], name='idx_bus_loc_name'), models.Index(fields=['default'], name='idx_bus_loc_default'), models.Index(fields=['county'], name='idx_bus_loc_county'), models.Index(fields=['constituency'], name='idx_bus_loc_const'), models.Index(fields=['ward'], name='idx_bus_loc_ward'), models.Index(fields=['latitude'], name='idx_bus_loc_lat'), models.Index(fields=['longitude'], name='idx_bus_loc_lng'), models.Index(fields=['is_active'], name='idx_bus_loc_active'), models.Index(fields=['created_at'], name='idx_bus_loc_created')],
            },
        ),
        migrations.CreateModel(
            name='Bussiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Yogis Delight', max_length=100)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('finacial_year_start_month', models.CharField(choices=[('Jan', 'January'), ('Feb', 'February'), ('March', 'March'), ('Apr', 'April'), ('May', 'May'), ('Jun', 'June'), ('Jul', 'July'), ('Aug', 'August'), ('Sept', 'September'), ('Oct', 'October'), ('Nov', 'November'), ('Dec', 'December')], default='Jan', max_length=50)),
                ('stock_accounting_method', models.CharField(choices=[('FIFO', 'First In First Out(FIFO)'), ('LIFO', 'Last In Last Out(LIFO)')], default='FIFO', help_text='Select stock account method', max_length=50)),
                ('currency', models.CharField(default='KES', max_length=250)),
                ('transaction_edit_days', models.IntegerField(default=30, help_text='In Days')),
                ('default_profit_margin', models.DecimalField(decimal_places=2, default=Decimal('25.00'), help_text='Percentage (%)', max_digits=10)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='business/logo')),
                ('watermarklogo', models.ImageField(blank=True, null=True, upload_to='business/logo')),
                ('timezone', timezone_field.fields.TimeZoneField(default='Africa/Nairobi')),
                ('business_primary_color', models.CharField(default='#1976D2', help_text='Main brand color (e.g. #1976D2)', max_length=7)),
                ('business_secondary_color', models.CharField(default='#FF5722', help_text='Secondary brand color (e.g. #FF5722)', max_length=7)),
                ('business_text_color', models.CharField(default='#212121', help_text='Text color (e.g. #212121)', max_length=7)),
                ('business_background_color', models.CharField(default='#ffffff', help_text='Background color (e.g. #ffffff)', max_length=7)),
                ('ui_theme_preset', models.CharField(choices=[('Lara', 'Lara Theme'), ('Aura', 'Aura Theme')], default='Lara', help_text='UI theme preset', max_length=20)),
                ('ui_menu_mode', models.CharField(choices=[('static', 'Static'), ('overlay', 'Overlay')], default='static', help_text='Menu display mode', max_length=20)),
                ('ui_dark_mode', models.BooleanField(default=False, help_text='Enable dark mode')),
                ('ui_surface_style', models.CharField(default='slate', help_text='Surface style (e.g. slate, stone, soho, etc.)', max_length=20)),
                ('kra_number', models.CharField(blank=True, help_text='KRA PIN Number for tax compliance', max_length=50, null=True)),
                ('business_license_number', models.CharField(blank=True, help_text='Business license registration number', max_length=100, null=True)),
                ('business_license_expiry', models.DateField(blank=True, help_text='Business license expiration date', null=True)),
                ('business_registration_number', models.CharField(blank=True, help_text='Company registration number', max_length=100, null=True)),
                ('business_type', models.CharField(choices=[('sole_proprietorship', 'Sole Proprietorship'), ('partnership', 'Partnership'), ('limited_company', 'Limited Company'), ('public_company', 'Public Company'), ('ngo', 'NGO'), ('other', 'Other')], default='limited_company', help_text='Type of business entity', max_length=50)),
                ('county', models.CharField(blank=True, help_text='Kenyan county where business is located', max_length=100, null=True, validators=[core.validators.validate_kenyan_county])),
                ('postal_code', models.CharField(blank=True, help_text='Postal code for business location', max_length=10, null=True, validators=[core.validators.validate_kenyan_postal_code])),
                ('kra_api_enabled', models.BooleanField(default=False, help_text='Enable KRA API integration')),
                ('kra_api_key', models.CharField(blank=True, help_text='KRA API key for integration', max_length=255, null=True)),
                ('kra_api_secret', models.CharField(blank=True, help_text='KRA API secret for integration', max_length=255, null=True)),
                ('kra_last_sync', models.DateTimeField(blank=True, help_text='Last KRA data synchronization', null=True)),
                ('tax_compliance_status', models.CharField(choices=[('compliant', 'Compliant'), ('non_compliant', 'Non-Compliant'), ('pending', 'Pending Review'), ('exempt', 'Exempt')], default='pending', help_text='Current tax compliance status', max_length=20)),
                ('last_compliance_check', models.DateTimeField(blank=True, help_text='Last compliance status check', null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='businesses', to='business.businesslocation')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Details',
                'verbose_name_plural': 'Business Details',
                'db_table': 'business_details',
            },
        ),
        migrations.CreateModel(
            name='BrandingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_color_name', models.CharField(choices=[('blue', 'Blue'), ('green', 'Green'), ('yellow', 'Yellow'), ('cyan', 'Cyan'), ('pink', 'Pink'), ('indigo', 'Indigo'), ('teal', 'Teal'), ('orange', 'Orange'), ('bluegray', 'Blue Gray'), ('purple', 'Purple'), ('red', 'Red'), ('amber', 'Amber')], default='blue', help_text='Color name for PrimeVue theme', max_length=20)),
                ('surface_name', models.CharField(choices=[('slate', 'Slate'), ('zinc', 'Zinc'), ('stone', 'Stone'), ('soho', 'Soho'), ('vela', 'Vela'), ('arya', 'Arya'), ('concord', 'Concord'), ('fluent', 'Fluent'), ('noir', 'Noir'), ('ocean', 'Ocean')], default='slate', help_text='Surface style name for PrimeVue theme', max_length=20)),
                ('compact_mode', models.BooleanField(default=False, help_text='Use compact mode for UI elements')),
                ('ripple_effect', models.BooleanField(default=True, help_text='Enable ripple effect on clickable elements')),
                ('border_radius', models.CharField(default='4px', help_text='Border radius for UI elements (e.g. 4px)', max_length=10)),
                ('scale_factor', models.FloatField(default=1.0, help_text='UI scaling factor (1.0 = normal)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='branding', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Branding Settings',
                'verbose_name_plural': 'Branding Settings',
                'db_table': 'business_branding_settings',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Main Branch', max_length=100)),
                ('branch_code', models.CharField(default='MB00100', max_length=100, unique=True)),
                ('contact_number', models.CharField(default='+254743793901', max_length=15, validators=[django.core.validators.RegexValidator(message='Please enter a valid Kenyan phone number.', regex='^(?:\\+?254|0)(?:\\d{9}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{2}\\s\\d{3}\\s\\d{3})$')])),
                ('alternate_contact_number', models.CharField(blank=True, default='+254743793901', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Kenyan phone number.', regex='^(?:\\+?254|0)(?:\\d{9}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{2}\\s\\d{3}\\s\\d{3})$')])),
                ('email', models.EmailField(default='info@codevertexitsolutions.com', max_length=255)),
                ('opening_hours', models.CharField(default='Monday-Friday: 8:00 AM - 5:00 PM', help_text='Business operating hours', max_length=255)),
                ('is_24_hours', models.BooleanField(default=False, help_text='Whether location operates 24/7')),
                ('whatsapp_number', models.CharField(blank=True, help_text='WhatsApp business number', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Kenyan phone number.', regex='^(?:\\+?254|0)(?:\\d{9}|\\d{3}\\s\\d{3}\\s\\d{3}|\\d{2}\\s\\d{3}\\s\\d{3})$')])),
                ('landline_number', models.CharField(blank=True, help_text='Landline phone number', max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_main_branch', models.BooleanField(default=False, help_text='Whether this is the main business branch')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='business.businesslocation')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Business Branches',
                'db_table': 'business_branches',
            },
        ),
        migrations.CreateModel(
            name='PickupStations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_location', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this pickup station is currently active')),
                ('priority_order', models.PositiveIntegerField(default=0, help_text='Higher number means higher priority in listings')),
                ('delivery_radius_km', models.PositiveIntegerField(default=5, help_text='Delivery radius in kilometers from this station')),
                ('open_hours', models.CharField(default='Mon-Fri 0800hrs - 1700hrs;Sat 0800hrs - 1300hrs', max_length=255)),
                ('is_24_hours', models.BooleanField(default=False, help_text='Whether station operates 24/7')),
                ('payment_options', models.CharField(default='MPESA On Delivery, Cards', max_length=500)),
                ('helpline', models.CharField(default='076353535353', max_length=20)),
                ('whatsapp_number', models.CharField(blank=True, help_text='WhatsApp number for customer support', max_length=15, null=True)),
                ('google_pin', models.URLField(default='https://goo.gl/maps/p2QAwb7jbmxuJcb36', max_length=1500)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS latitude coordinate', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS longitude coordinate', max_digits=9, null=True)),
                ('postal_code', models.CharField(blank=True, default='57-40100', max_length=100, null=True, validators=[core.validators.validate_kenyan_postal_code])),
                ('shipping_charge', models.PositiveBigIntegerField(default=85, help_text='Shipping charge for this pickup station')),
                ('free_delivery_threshold', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Order amount above which delivery is free', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pickup_stations', to='business.bussiness')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickupstations', to='addresses.deliveryregion')),
            ],
            options={
                'verbose_name_plural': 'Pickup Stations',
                'db_table': 'pickup_stations',
                'ordering': ['-priority_order', 'pickup_location'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PrefixSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase', models.CharField(default='P', max_length=5)),
                ('purchase_order', models.CharField(default='PO', max_length=5)),
                ('purchase_return', models.CharField(default='PRT', max_length=5)),
                ('purchase_requisition', models.CharField(default='PRQ', max_length=5)),
                ('stock_transfer', models.CharField(default='ST', max_length=5)),
                ('sale_return', models.CharField(default='SR', max_length=5)),
                ('expense', models.CharField(default='EP', max_length=5)),
                ('business_location', models.CharField(default='BL', max_length=5)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefixsettings', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Prefix Settings',
                'verbose_name_plural': 'Prefix Settings',
                'db_table': 'prefix_settings',
            },
        ),
        migrations.CreateModel(
            name='ProductSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_unit', models.CharField(default='Piece(s)', max_length=100)),
                ('enable_warranty', models.BooleanField(default=False)),
                ('enable_product_expiry', models.BooleanField(default=False)),
                ('stop_selling_days_before_expiry', models.IntegerField(default=1)),
                ('sku_prefix', models.CharField(default='BH', max_length=20)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productsettings', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Product Settings',
                'verbose_name_plural': 'Product Settings',
                'db_table': 'product_settings',
            },
        ),
        migrations.CreateModel(
            name='ServiceTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('packing_charge_type', models.CharField(choices=[('Fixed', 'Fixed'), ('Percentage', 'Percentage')], default='Fixed', max_length=50)),
                ('packing_charge', models.IntegerField(default=0)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicetypes', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Service Types',
                'verbose_name_plural': 'Service Types',
                'db_table': 'service_types',
            },
        ),
        migrations.CreateModel(
            name='TaxRates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_name', models.CharField(default='VAT', max_length=50)),
                ('tax_number', models.CharField(default='T001', max_length=50, unique=True)),
                ('percentage', models.DecimalField(decimal_places=2, default=Decimal('16.00'), max_digits=10)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxrates', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Tax Rates',
                'verbose_name_plural': 'Tax Rates',
                'db_table': 'taxrates',
            },
        ),
        migrations.CreateModel(
            name='SaleSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salesettings', to='business.bussiness')),
                ('default_tax', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.taxrates')),
            ],
            options={
                'verbose_name': 'Sale Settings',
                'verbose_name_plural': 'Sale Settings',
                'db_table': 'sale_settings',
            },
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['owner'], name='idx_business_owner'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['location'], name='idx_business_location'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['name'], name='idx_business_name'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['start_date'], name='idx_business_start_date'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['kra_number'], name='idx_business_kra_number'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['business_license_number'], name='idx_business_license_number'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['business_license_expiry'], name='idx_business_license_expiry'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['business_registration_number'], name='idx_business_reg_number'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['business_type'], name='idx_business_type'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['county'], name='idx_business_county'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['postal_code'], name='idx_business_postal_code'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['kra_api_enabled'], name='idx_business_kra_api_enabled'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['tax_compliance_status'], name='idx_business_tax_comp_status'),
        ),
        migrations.AddIndex(
            model_name='bussiness',
            index=models.Index(fields=['last_compliance_check'], name='idx_business_last_comp_check'),
        ),
        migrations.AddIndex(
            model_name='brandingsettings',
            index=models.Index(fields=['business'], name='idx_branding_business'),
        ),
        migrations.AddIndex(
            model_name='brandingsettings',
            index=models.Index(fields=['created_at'], name='idx_branding_created_at'),
        ),
        migrations.AddIndex(
            model_name='brandingsettings',
            index=models.Index(fields=['updated_at'], name='idx_branding_updated_at'),
        ),
        migrations.AddIndex(
            model_name='branch',
            index=models.Index(fields=['business'], name='idx_branches_business'),
        ),
        migrations.AddIndex(
            model_name='branch',
            index=models.Index(fields=['location'], name='idx_branches_location'),
        ),
        migrations.AddIndex(
            model_name='branch',
            index=models.Index(fields=['is_active'], name='idx_branches_active'),
        ),
        migrations.AddIndex(
            model_name='branch',
            index=models.Index(fields=['created_at'], name='idx_branches_created_at'),
        ),
        migrations.AddIndex(
            model_name='branch',
            index=models.Index(fields=['updated_at'], name='idx_branches_updated_at'),
        ),
        migrations.AddIndex(
            model_name='pickupstations',
            index=models.Index(fields=['business'], name='idx_pickup_stations_business'),
        ),
        migrations.AddIndex(
            model_name='pickupstations',
            index=models.Index(fields=['region'], name='idx_pickup_stations_region'),
        ),
        migrations.AddIndex(
            model_name='pickupstations',
            index=models.Index(fields=['is_active'], name='idx_pickup_stations_active'),
        ),
        migrations.AddIndex(
            model_name='pickupstations',
            index=models.Index(fields=['priority_order'], name='idx_pickup_stations_priority'),
        ),
        migrations.AddIndex(
            model_name='pickupstations',
            index=models.Index(fields=['latitude'], name='idx_pickup_stations_latitude'),
        ),
        migrations.AddIndex(
            model_name='pickupstations',
            index=models.Index(fields=['longitude'], name='idx_pickup_stations_longitude'),
        ),
        migrations.AddIndex(
            model_name='pickupstations',
            index=models.Index(fields=['created_at'], name='idx_pickup_stations_created'),
        ),
        migrations.AddIndex(
            model_name='prefixsettings',
            index=models.Index(fields=['business'], name='idx_prefix_settings_business'),
        ),
        migrations.AddIndex(
            model_name='productsettings',
            index=models.Index(fields=['business'], name='idx_product_settings_business'),
        ),
        migrations.AddIndex(
            model_name='servicetypes',
            index=models.Index(fields=['business'], name='idx_service_types_business'),
        ),
        migrations.AddIndex(
            model_name='servicetypes',
            index=models.Index(fields=['name'], name='idx_service_types_name'),
        ),
        migrations.AddIndex(
            model_name='taxrates',
            index=models.Index(fields=['business'], name='idx_business_tax_business'),
        ),
        migrations.AddIndex(
            model_name='taxrates',
            index=models.Index(fields=['tax_number'], name='idx_business_tax_number'),
        ),
        migrations.AddIndex(
            model_name='salesettings',
            index=models.Index(fields=['business'], name='idx_sale_settings_business'),
        ),
    ]
