# Generated by Django 5.2 on 2025-09-11 07:49

import datetime
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0002_initial'),
        ('business', '0001_initial'),
        ('contacts', '0001_initial'),
        ('payroll', '0001_initial'),
        ('stockinventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MpesaTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientName', models.CharField(max_length=255)),
                ('clientId', models.CharField(max_length=255)),
                ('transactionType', models.CharField(choices=[('deposit', 'deposit'), ('withdrawal', 'withdrawal')], default='withdrawal', max_length=20)),
                ('transactionRef', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name': 'Mpesa Transactions',
                'verbose_name_plural': 'Mpesa Transactions',
                'db_table': 'mpesa_transactions',
                'managed': True,
                'indexes': [models.Index(fields=['clientId'], name='idx_mpesa_transaction_client'), models.Index(fields=['transactionType'], name='idx_mpesa_transaction_type'), models.Index(fields=['transactionRef'], name='idx_mpesa_transaction_ref'), models.Index(fields=['date'], name='idx_mpesa_transaction_date')],
            },
        ),
        migrations.CreateModel(
            name='PayTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField(default=1)),
                ('period', models.CharField(choices=[('Days', 'Days'), ('Months', 'Months'), ('Years', 'Years')], max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Sale Pay Terms',
                'db_table': 'sale_pay_terms',
                'ordering': ['duration'],
                'managed': True,
                'indexes': [models.Index(fields=['duration'], name='idx_pay_term_duration'), models.Index(fields=['period'], name='idx_pay_term_period')],
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opened_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('is_open', models.BooleanField(default=False)),
                ('cash_at_opening', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('cash_at_closing', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('total_sales', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registers', to='business.branch')),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_registers', to=settings.AUTH_USER_MODEL)),
                ('opened_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opened_registers', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Cash Register',
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_id', models.CharField(blank=True, max_length=100, null=True)),
                ('sale_tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('sale_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('additional_expenses', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('balance_due', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('balance_overdue', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('date_added', models.DateTimeField(default=datetime.datetime(2025, 9, 11, 7, 49, 1, 770494, tzinfo=datetime.timezone.utc))),
                ('date_updated', models.DateTimeField(default=datetime.datetime(2025, 9, 11, 7, 49, 1, 770512, tzinfo=datetime.timezone.utc))),
                ('status', models.CharField(blank=True, choices=[('Draft', 'Draft'), ('Quotation', 'Quotation'), ('Final', 'Final')], default='Final', max_length=20, null=True)),
                ('payment_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Due', 'Due'), ('Partial', 'Partial'), ('Paid', 'Paid')], default='Pending', max_length=20, null=True)),
                ('paymethod', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Mpesa', 'Mpesa'), ('Card', 'Card'), ('Bank', 'Bank'), ('Advance', 'Advance'), ('Other', 'Other')], default='Cash', max_length=20, null=True)),
                ('sale_source', models.CharField(choices=[('pos', 'POS'), ('online', 'Online'), ('other', 'Other')], default='pos', max_length=50)),
                ('delete_status', models.BooleanField(default=False)),
                ('attendant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='contacts.contact')),
                ('pay_term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='pos.payterm')),
                ('register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='pos.register')),
            ],
            options={
                'verbose_name': 'Sales',
                'verbose_name_plural': 'Sales',
                'db_table': 'sales',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='POSAdvanceSaleRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.CharField(max_length=100, unique=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('advance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pos_sales', to='payroll.advances')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_advance_record', to='pos.sales')),
            ],
            options={
                'verbose_name': 'POS Advance Sale Record',
                'verbose_name_plural': 'POS Advance Sale Records',
                'db_table': 'pos_advance_sale_records',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='CustomerReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='pos.sales')),
            ],
            options={
                'verbose_name': 'Customer Reward',
                'verbose_name_plural': 'Customer Rewards',
            },
        ),
        migrations.CreateModel(
            name='salesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=0)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salesitems', to='pos.sales')),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salesitems', to='stockinventory.stockinventory', verbose_name='sale item')),
            ],
            options={
                'verbose_name': 'Sales Items',
                'verbose_name_plural': 'Sales Items',
                'db_table': 'salesitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SalesReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_id', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('date_returned', models.DateTimeField(auto_now_add=True)),
                ('return_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('return_amount_due', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('payment_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Due', 'Due'), ('Partial', 'Partial'), ('Paid', 'Paid')], default='Pending', max_length=20, null=True)),
                ('attendant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='returns', to=settings.AUTH_USER_MODEL)),
                ('original_sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_returns', to='pos.sales')),
            ],
            options={
                'verbose_name_plural': 'Sale Returns',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ReturnedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField()),
                ('sub_total', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_items', to='stockinventory.stockinventory')),
                ('return_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_items', to='pos.salesreturn')),
            ],
            options={
                'verbose_name_plural': 'Sale Return Items',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_note', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('deliverd', 'Delivered'), ('cancelled', 'Cancelled')], default='Pending', max_length=50)),
                ('delivered_to', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('delivered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_staff', to=settings.AUTH_USER_MODEL)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shippings', to='pos.sales')),
                ('shipping_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shippings', to='addresses.addressbook')),
            ],
            options={
                'verbose_name_plural': 'Shipping',
                'db_table': 'shipping',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SalesLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_date', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=500)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_tasks', to=settings.AUTH_USER_MODEL)),
                ('shipping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_tasks', to='pos.shipping')),
            ],
            options={
                'verbose_name_plural': 'Sales Logs',
                'ordering': ['-log_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ShippingDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='shipping/files')),
                ('shipping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_documents', to='pos.shipping')),
            ],
            options={
                'verbose_name_plural': 'Shipping Documents',
                'db_table': 'shipping_documents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SuspendedSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('items', models.JSONField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.branch')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.contact')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='register',
            index=models.Index(fields=['branch'], name='idx_register_branch'),
        ),
        migrations.AddIndex(
            model_name='register',
            index=models.Index(fields=['user'], name='idx_register_user'),
        ),
        migrations.AddIndex(
            model_name='register',
            index=models.Index(fields=['is_open'], name='idx_register_is_open'),
        ),
        migrations.AddIndex(
            model_name='register',
            index=models.Index(fields=['opened_at'], name='idx_register_opened_at'),
        ),
        migrations.AddIndex(
            model_name='register',
            index=models.Index(fields=['closed_at'], name='idx_register_closed_at'),
        ),
        migrations.AddIndex(
            model_name='register',
            index=models.Index(fields=['opened_by'], name='idx_register_opened_by'),
        ),
        migrations.AddIndex(
            model_name='register',
            index=models.Index(fields=['closed_by'], name='idx_register_closed_by'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['register'], name='idx_sales_register'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['customer'], name='idx_sales_customer'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['attendant'], name='idx_sales_attendant'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['sale_id'], name='idx_sales_sale_id'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['status'], name='idx_sales_status'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['payment_status'], name='idx_sales_payment_status'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['paymethod'], name='idx_sales_paymethod'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['sale_source'], name='idx_sales_source'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['date_added'], name='idx_sales_date_added'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['delete_status'], name='idx_sales_delete_status'),
        ),
        migrations.AddIndex(
            model_name='posadvancesalerecord',
            index=models.Index(fields=['sale'], name='idx_pos_advance_sale'),
        ),
        migrations.AddIndex(
            model_name='posadvancesalerecord',
            index=models.Index(fields=['advance'], name='idx_pos_advance_advance'),
        ),
        migrations.AddIndex(
            model_name='posadvancesalerecord',
            index=models.Index(fields=['reference_id'], name='idx_pos_advance_ref'),
        ),
        migrations.AddIndex(
            model_name='posadvancesalerecord',
            index=models.Index(fields=['date_created'], name='idx_pos_advance_date'),
        ),
        migrations.AddIndex(
            model_name='posadvancesalerecord',
            index=models.Index(fields=['created_by'], name='idx_pos_advance_created_by'),
        ),
        migrations.AddIndex(
            model_name='customerreward',
            index=models.Index(fields=['sale'], name='idx_customer_reward_sale'),
        ),
        migrations.AddIndex(
            model_name='customerreward',
            index=models.Index(fields=['date_created'], name='idx_customer_reward_created'),
        ),
        migrations.AddIndex(
            model_name='salesitems',
            index=models.Index(fields=['sale'], name='idx_sales_items_sale'),
        ),
        migrations.AddIndex(
            model_name='salesitems',
            index=models.Index(fields=['stock_item'], name='idx_sales_items_stock'),
        ),
        migrations.AddIndex(
            model_name='salesreturn',
            index=models.Index(fields=['return_id'], name='idx_sales_return_id'),
        ),
        migrations.AddIndex(
            model_name='salesreturn',
            index=models.Index(fields=['original_sale'], name='idx_sales_return_original_sale'),
        ),
        migrations.AddIndex(
            model_name='salesreturn',
            index=models.Index(fields=['attendant'], name='idx_sales_return_attendant'),
        ),
        migrations.AddIndex(
            model_name='salesreturn',
            index=models.Index(fields=['date_returned'], name='idx_sales_return_date'),
        ),
        migrations.AddIndex(
            model_name='salesreturn',
            index=models.Index(fields=['payment_status'], name='idx_sales_return_pay_status'),
        ),
        migrations.AddIndex(
            model_name='returneditem',
            index=models.Index(fields=['return_record'], name='idx_returned_item_record'),
        ),
        migrations.AddIndex(
            model_name='returneditem',
            index=models.Index(fields=['stock_item'], name='idx_returned_item_stock'),
        ),
        migrations.AddIndex(
            model_name='shipping',
            index=models.Index(fields=['sale'], name='idx_shipping_sale'),
        ),
        migrations.AddIndex(
            model_name='shipping',
            index=models.Index(fields=['shipping_address'], name='idx_shipping_address'),
        ),
        migrations.AddIndex(
            model_name='shipping',
            index=models.Index(fields=['status'], name='idx_shipping_status'),
        ),
        migrations.AddIndex(
            model_name='shipping',
            index=models.Index(fields=['delivered_by'], name='idx_shipping_delivered_by'),
        ),
        migrations.AddIndex(
            model_name='shipping',
            index=models.Index(fields=['created_at'], name='idx_shipping_created_at'),
        ),
        migrations.AddIndex(
            model_name='saleslogs',
            index=models.Index(fields=['shipping'], name='idx_sales_logs_shipping'),
        ),
        migrations.AddIndex(
            model_name='saleslogs',
            index=models.Index(fields=['log_date'], name='idx_sales_logs_log_date'),
        ),
        migrations.AddIndex(
            model_name='saleslogs',
            index=models.Index(fields=['user'], name='idx_sales_logs_user'),
        ),
        migrations.AddIndex(
            model_name='shippingdocuments',
            index=models.Index(fields=['shipping'], name='idx_shipping_docs_shipping'),
        ),
    ]
