# Generated by Django 5.2 on 2025-09-11 11:50

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('pattern', models.TextField(help_text='Regex pattern to match error messages')),
                ('category', models.CharField(choices=[('validation', 'Validation Error'), ('authentication', 'Authentication Error'), ('authorization', 'Authorization Error'), ('database', 'Database Error'), ('network', 'Network Error'), ('integration', 'Integration Error'), ('business_logic', 'Business Logic Error'), ('system', 'System Error'), ('performance', 'Performance Error'), ('security', 'Security Error')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('module', models.CharField(blank=True, max_length=50, null=True)),
                ('auto_resolve', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('error_id', models.CharField(help_text='Unique error identifier', max_length=255, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('validation', 'Validation Error'), ('authentication', 'Authentication Error'), ('authorization', 'Authorization Error'), ('database', 'Database Error'), ('network', 'Network Error'), ('integration', 'Integration Error'), ('business_logic', 'Business Logic Error'), ('system', 'System Error'), ('performance', 'Performance Error'), ('security', 'Security Error')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('ignored', 'Ignored')], default='open', max_length=20)),
                ('module', models.CharField(help_text='ERP module where error occurred', max_length=50)),
                ('function_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('error_message', models.TextField()),
                ('error_traceback', models.TextField(blank=True, null=True)),
                ('error_data', models.JSONField(blank=True, default=dict)),
                ('request_method', models.CharField(blank=True, max_length=10, null=True)),
                ('request_url', models.URLField(blank=True, null=True)),
                ('request_data', models.JSONField(blank=True, default=dict)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('occurred_at', models.DateTimeField(auto_now_add=True)),
                ('last_occurred', models.DateTimeField(auto_now=True)),
                ('occurrence_count', models.PositiveIntegerField(default=1)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_errors', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='errors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-occurred_at'],
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=20)),
                ('message', models.TextField()),
                ('data', models.JSONField(blank=True, default=dict)),
                ('error', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='error_handling.error')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='error',
            index=models.Index(fields=['error_id'], name='error_handl_error_i_3a01f7_idx'),
        ),
        migrations.AddIndex(
            model_name='error',
            index=models.Index(fields=['status'], name='error_handl_status_9dffbc_idx'),
        ),
        migrations.AddIndex(
            model_name='error',
            index=models.Index(fields=['severity'], name='error_handl_severit_0c2ed8_idx'),
        ),
        migrations.AddIndex(
            model_name='error',
            index=models.Index(fields=['category'], name='error_handl_categor_157088_idx'),
        ),
        migrations.AddIndex(
            model_name='error',
            index=models.Index(fields=['module'], name='error_handl_module_6c6a33_idx'),
        ),
        migrations.AddIndex(
            model_name='error',
            index=models.Index(fields=['user'], name='error_handl_user_id_5b798f_idx'),
        ),
        migrations.AddIndex(
            model_name='error',
            index=models.Index(fields=['occurred_at'], name='error_handl_occurre_803fa6_idx'),
        ),
        migrations.AddIndex(
            model_name='errorlog',
            index=models.Index(fields=['error', 'timestamp'], name='error_handl_error_i_bc1371_idx'),
        ),
        migrations.AddIndex(
            model_name='errorlog',
            index=models.Index(fields=['level'], name='error_handl_level_8398e3_idx'),
        ),
    ]
