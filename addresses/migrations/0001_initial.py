# Generated by Django 5.2.7 on 2025-10-25 21:43

import core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddressBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_label', models.CharField(default='My Address', max_length=255)),
                ('address_type', models.CharField(choices=[('shipping', 'Shipping Address'), ('billing', 'Billing Address'), ('both', 'Shipping & Billing Address')], default='both', max_length=20)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('other_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('county', models.CharField(help_text='Kenyan county (e.g., Nairobi, Mombasa, Kisumu)', max_length=100, validators=[core.validators.validate_kenyan_county])),
                ('constituency', models.CharField(blank=True, help_text='Constituency within the county', max_length=100, null=True)),
                ('ward', models.CharField(blank=True, help_text='Ward within the constituency', max_length=100, null=True)),
                ('street_name', models.CharField(help_text='Street name or road name', max_length=255)),
                ('building_name', models.CharField(blank=True, help_text='Building name or landmark', max_length=255, null=True)),
                ('floor_number', models.CharField(blank=True, help_text='Floor number or level', max_length=20, null=True)),
                ('room_number', models.CharField(blank=True, help_text='Room number or office number', max_length=20, null=True)),
                ('postal_code', models.CharField(help_text='Postal code', max_length=10, validators=[core.validators.validate_kenyan_postal_code])),
                ('country', models.CharField(default='Kenya', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS latitude coordinate', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS longitude coordinate', max_digits=9, null=True)),
                ('delivery_type', models.CharField(choices=[('home', 'Home Delivery'), ('pickup', 'Pickup Station'), ('office', 'Office Delivery')], default='home', help_text='Preferred delivery method', max_length=20)),
                ('is_default_shipping', models.BooleanField(default=False, verbose_name='Default Shipping Address')),
                ('is_default_billing', models.BooleanField(default=False, verbose_name='Default Billing Address')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether address has been verified')),
                ('verification_date', models.DateTimeField(blank=True, help_text='When address was verified', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Address Book',
                'db_table': 'address_book',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AddressValidation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('validated', 'Validated'), ('invalid', 'Invalid'), ('partial', 'Partially Valid'), ('failed', 'Validation Failed')], default='pending', max_length=20)),
                ('validation_method', models.CharField(choices=[('manual', 'Manual Verification'), ('api', 'API Validation'), ('gps', 'GPS Verification'), ('postal', 'Postal Code Verification')], default='manual', max_length=50)),
                ('is_valid', models.BooleanField(default=False)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='Validation confidence score (0-1)', max_digits=3, null=True)),
                ('validation_notes', models.TextField(blank=True, null=True)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'address_validations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the delivery region', max_length=255)),
                ('county', models.CharField(help_text='County this region belongs to', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('delivery_charge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Standard delivery charge for this region', max_digits=10)),
                ('free_delivery_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Order amount for free delivery', max_digits=15, null=True)),
                ('estimated_delivery_days', models.PositiveIntegerField(default=3, help_text='Estimated delivery time in days')),
                ('is_active', models.BooleanField(default=True)),
                ('covers_counties', models.JSONField(blank=True, default=list, help_text='List of counties covered by this region')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'delivery_regions',
                'ordering': ['name'],
            },
        ),
    ]
