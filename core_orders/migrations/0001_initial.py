# Generated by Django 5.2.7 on 2025-10-25 21:43

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0002_initial'),
        ('business', '0001_initial'),
        ('contacts', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('order_type', models.CharField(help_text='Type of order (ecommerce, procurement, etc.)', max_length=50)),
                ('source', models.CharField(choices=[('online', 'Online Store'), ('pos', 'Point of Sale'), ('manual', 'Manual Entry'), ('mobile_app', 'Mobile App'), ('procurement', 'Procurement'), ('other', 'Other')], default='manual', max_length=20)),
                ('delivery_type', models.CharField(choices=[('home', 'Home Delivery'), ('pickup', 'Pickup Station'), ('office', 'Office Delivery'), ('self_pickup', 'Self Pickup')], default='home', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('balance_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('packed', 'Packed'), ('shipped', 'Shipped'), ('in_transit', 'In Transit'), ('out_for_delivery', 'Out for Delivery'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold'), ('backordered', 'Backordered'), ('refund_requested', 'Refund Requested'), ('refunded', 'Refunded'), ('payment_failed', 'Payment Failed')], default='draft', max_length=50)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded'), ('awaiting_confirmation', 'Awaiting Confirmation'), ('processing', 'Processing'), ('authorized', 'Authorized')], default='pending', max_length=50)),
                ('fulfillment_status', models.CharField(blank=True, max_length=50, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_provider', models.CharField(blank=True, max_length=100, null=True)),
                ('estimated_delivery_date', models.DateField(blank=True, null=True)),
                ('actual_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('delivery_notes', models.TextField(blank=True, null=True)),
                ('terms', models.TextField(blank=True, help_text='Order terms and conditions')),
                ('notes', models.TextField(blank=True, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_at', models.DateTimeField(blank=True, null=True)),
                ('packed_at', models.DateTimeField(blank=True, null=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('kra_compliance', models.BooleanField(default=False, help_text='Whether order complies with KRA requirements')),
                ('tax_reference', models.CharField(blank=True, help_text='KRA tax reference number', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_orders', to='addresses.addressbook')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='business.branch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_orders', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='contacts.contact')),
                ('pickup_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='business.pickupstations')),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_orders', to='addresses.addressbook')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_orders', to='contacts.contact')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core_orders.baseorder')),
            ],
            options={
                'db_table': 'order_items',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_applied', models.DecimalField(decimal_places=2, help_text='Amount applied to this specific order', max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core_orders.baseorder')),
            ],
            options={
                'db_table': 'order_payments',
            },
        ),
    ]
