# Generated by Django 5.2.7 on 2025-10-25 21:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Integrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('MPESA', 'Mpesa'), ('PAYPAL', 'PayPal'), ('CARD', 'Card Payment')], default='MPESA', max_length=100)),
                ('integration_type', models.CharField(choices=[('PAYMENT', 'Payment Integration')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Integrations',
                'ordering': ['integration_type', '-is_default', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GovernmentServiceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_provider', models.CharField(choices=[('ECITIZEN', 'eCitizen'), ('HUDUMA', 'Huduma Kenya'), ('NTSA', 'National Transport and Safety Authority'), ('NITA', 'National Industrial Training Authority'), ('NSSF', 'National Social Security Fund'), ('NHIF', 'National Hospital Insurance Fund'), ('HELB', 'Higher Education Loans Board'), ('IPRS', 'Integrated Population Registration System'), ('OTHER', 'Other Government Service')], max_length=50)),
                ('service_name', models.CharField(help_text='Full service name', max_length=255)),
                ('service_code', models.CharField(blank=True, help_text='Service code if applicable', max_length=50, null=True)),
                ('is_test_mode', models.BooleanField(default=True, help_text='Use sandbox/test environment')),
                ('base_url', models.URLField(help_text='Service API base URL')),
                ('sandbox_url', models.URLField(blank=True, help_text='Sandbox API URL', null=True)),
                ('client_id', models.CharField(blank=True, max_length=1500, null=True)),
                ('client_secret', models.CharField(blank=True, max_length=1500, null=True)),
                ('api_key', models.CharField(blank=True, max_length=1500, null=True)),
                ('api_token', models.CharField(blank=True, max_length=1500, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=1500, null=True)),
                ('organization_id', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_code', models.CharField(blank=True, max_length=50, null=True)),
                ('auth_path', models.CharField(default='/oauth/token', max_length=255)),
                ('query_path', models.CharField(default='/query', max_length=255)),
                ('submit_path', models.CharField(default='/submit', max_length=255)),
                ('status_path', models.CharField(default='/status', max_length=255)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('callback_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Government Service Settings',
                'verbose_name_plural': 'Government Service Settings',
                'indexes': [models.Index(fields=['service_provider'], name='idx_govt_service_provider'), models.Index(fields=['is_active'], name='idx_govt_service_active')],
            },
        ),
        migrations.CreateModel(
            name='CardPaymentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(default='STRIPE', help_text='Payment processor name', max_length=50)),
                ('is_test_mode', models.BooleanField(default=True, help_text='Use test/sandbox environment')),
                ('api_key', models.CharField(default='sk_test_your_stripe_key', max_length=1500)),
                ('public_key', models.CharField(default='pk_test_your_stripe_key', help_text='Public/publishable key', max_length=1500)),
                ('webhook_secret', models.CharField(blank=True, max_length=1500, null=True)),
                ('base_url', models.URLField(default='https://api.stripe.com', help_text='API base URL')),
                ('webhook_url', models.URLField(default='https://yourdomain.com/api/payments/stripe/webhook', help_text='URL for payment webhooks')),
                ('success_url', models.URLField(default='https://yourdomain.com/payment/success')),
                ('cancel_url', models.URLField(default='https://yourdomain.com/payment/cancel')),
                ('default_currency', models.CharField(default='KES', max_length=3)),
                ('business_name', models.CharField(default='BengoERP', max_length=255)),
                ('statement_descriptor', models.CharField(default='BengoERP Purchase', help_text='Text that appears on customer statements', max_length=22)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(blank=True, limit_choices_to={'integration_type': 'PAYMENT'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_payment_settings', to='integrations.integrations')),
            ],
            options={
                'verbose_name': 'Card Payment Settings',
                'verbose_name_plural': 'Card Payment Settings',
            },
        ),
        migrations.CreateModel(
            name='KRASettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('sandbox', 'Sandbox'), ('production', 'Production')], default='sandbox', max_length=20)),
                ('base_url', models.URLField(default='https://api.sandbox.kra.go.ke', help_text='Base URL for KRA eTIMS APIs')),
                ('kra_pin', models.CharField(blank=True, help_text='Business KRA PIN', max_length=20, null=True)),
                ('branch_code', models.CharField(blank=True, help_text='Branch code if applicable', max_length=10, null=True)),
                ('client_id', models.CharField(blank=True, max_length=1500, null=True)),
                ('client_secret', models.CharField(blank=True, max_length=1500, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=1500, null=True)),
                ('device_serial', models.CharField(blank=True, max_length=255, null=True)),
                ('pos_serial', models.CharField(blank=True, max_length=255, null=True)),
                ('token_path', models.CharField(default='/oauth/token', max_length=255)),
                ('invoice_path', models.CharField(default='/etims/v1/invoices', max_length=255)),
                ('invoice_status_path', models.CharField(default='/etims/v1/invoices/status', max_length=255)),
                ('certificate_path', models.CharField(default='/etims/v1/certificates', max_length=255)),
                ('compliance_path', models.CharField(default='/etims/v1/compliance', max_length=255)),
                ('sync_path', models.CharField(default='/etims/v1/sync', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.OneToOneField(blank=True, limit_choices_to={'integration_type': 'PAYMENT'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kra_settings', to='integrations.integrations')),
            ],
            options={
                'verbose_name': 'KRA Settings',
                'verbose_name_plural': 'KRA Settings',
            },
        ),
        migrations.CreateModel(
            name='MpesaSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumer_secret', models.CharField(blank=True, max_length=1500, null=True)),
                ('consumer_key', models.CharField(blank=True, max_length=1500, null=True)),
                ('passkey', models.CharField(blank=True, max_length=1500, null=True)),
                ('security_credential', models.CharField(blank=True, max_length=1500, null=True)),
                ('short_code', models.CharField(default='', max_length=100)),
                ('base_url', models.URLField(default='https://api.safaricom.co.ke')),
                ('callback_base_url', models.URLField(blank=True, null=True)),
                ('initiator_name', models.CharField(blank=True, max_length=1500, null=True)),
                ('initiator_password', models.CharField(blank=True, max_length=255, null=True)),
                ('integration', models.ForeignKey(blank=True, limit_choices_to={'integration_type': 'PAYMENT'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mpesa_settings', to='integrations.integrations')),
            ],
            options={
                'verbose_name': 'M-Pesa Settings',
                'verbose_name_plural': 'M-Pesa Settings',
            },
        ),
        migrations.CreateModel(
            name='PayPalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_test_mode', models.BooleanField(default=True, help_text='Use PayPal sandbox environment')),
                ('client_id', models.CharField(default='your-paypal-client-id', max_length=1500)),
                ('client_secret', models.CharField(default='your-paypal-client-secret', max_length=1500)),
                ('webhook_id', models.CharField(blank=True, max_length=1500, null=True)),
                ('base_url', models.URLField(default='https://api-m.sandbox.paypal.com', help_text='API base URL. Use https://api-m.sandbox.paypal.com for sandbox, https://api-m.paypal.com for production')),
                ('webhook_url', models.URLField(default='https://yourdomain.com/api/payments/paypal/webhook', help_text='URL for PayPal webhooks')),
                ('success_url', models.URLField(default='https://yourdomain.com/payment/success')),
                ('cancel_url', models.URLField(default='https://yourdomain.com/payment/cancel')),
                ('default_currency', models.CharField(default='KES', max_length=3)),
                ('business_name', models.CharField(default='BengoERP', max_length=255)),
                ('business_email', models.EmailField(default='payment@bengoerp.com', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(blank=True, limit_choices_to={'integration_type': 'PAYMENT'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paypal_settings', to='integrations.integrations')),
            ],
            options={
                'verbose_name': 'PayPal Settings',
                'verbose_name_plural': 'PayPal Settings',
            },
        ),
        migrations.CreateModel(
            name='WebhookEndpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('secret', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Webhook Endpoint',
                'verbose_name_plural': 'Webhook Endpoints',
                'indexes': [models.Index(fields=['name'], name='integration_name_a217f7_idx'), models.Index(fields=['is_active'], name='integration_is_acti_fcab2d_idx')],
            },
        ),
        migrations.CreateModel(
            name='BankAPISettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_provider', models.CharField(choices=[('EQUITY', 'Equity Bank'), ('KCB', 'Kenya Commercial Bank'), ('COOP', 'Co-operative Bank'), ('NCBA', 'NCBA Bank'), ('ABSA', 'Absa Bank Kenya'), ('STANCHART', 'Standard Chartered'), ('DTB', 'Diamond Trust Bank'), ('BARCLAYS', 'Barclays Bank Kenya'), ('OTHER', 'Other Bank')], max_length=50)),
                ('bank_name', models.CharField(help_text='Full bank name', max_length=255)),
                ('bank_code', models.CharField(blank=True, help_text='Bank code/SWIFT code', max_length=20, null=True)),
                ('is_test_mode', models.BooleanField(default=True, help_text='Use sandbox/test environment')),
                ('base_url', models.URLField(help_text='Bank API base URL')),
                ('sandbox_url', models.URLField(blank=True, help_text='Sandbox API URL', null=True)),
                ('client_id', models.CharField(blank=True, max_length=1500, null=True)),
                ('client_secret', models.CharField(blank=True, max_length=1500, null=True)),
                ('api_key', models.CharField(blank=True, max_length=1500, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=1500, null=True)),
                ('organization_id', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, help_text='Primary account for API operations', max_length=50, null=True)),
                ('auth_path', models.CharField(default='/oauth/token', max_length=255)),
                ('account_balance_path', models.CharField(default='/accounts/balance', max_length=255)),
                ('account_statement_path', models.CharField(default='/accounts/statement', max_length=255)),
                ('transfer_path', models.CharField(default='/payments/transfer', max_length=255)),
                ('bulk_payment_path', models.CharField(default='/payments/bulk', max_length=255)),
                ('payment_status_path', models.CharField(default='/payments/status', max_length=255)),
                ('webhook_url', models.URLField(blank=True, help_text='URL for bank webhooks', null=True)),
                ('callback_url', models.URLField(blank=True, help_text='URL for payment callbacks', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(blank=True, limit_choices_to={'integration_type': 'PAYMENT'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_api_settings', to='integrations.integrations')),
            ],
            options={
                'verbose_name': 'Bank API Settings',
                'verbose_name_plural': 'Bank API Settings',
                'indexes': [models.Index(fields=['bank_provider'], name='idx_bank_api_provider'), models.Index(fields=['is_active'], name='idx_bank_api_active')],
            },
        ),
        migrations.CreateModel(
            name='KRACertificateRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert_type', models.CharField(choices=[('tax_compliance', 'Tax Compliance'), ('vat', 'VAT'), ('paye', 'PAYE')], max_length=50)),
                ('period', models.CharField(max_length=50)),
                ('status', models.CharField(default='requested', max_length=20)),
                ('response_payload', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KRA Certificate Request',
                'verbose_name_plural': 'KRA Certificate Requests',
                'indexes': [models.Index(fields=['cert_type'], name='integration_cert_ty_d5162b_idx'), models.Index(fields=['period'], name='integration_period_2da4c7_idx'), models.Index(fields=['status'], name='integration_status_073d3e_idx'), models.Index(fields=['created_at'], name='integration_created_fac4ed_idx')],
            },
        ),
        migrations.CreateModel(
            name='KRAComplianceCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kra_pin', models.CharField(max_length=20)),
                ('is_compliant', models.BooleanField(default=False)),
                ('response_payload', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KRA Compliance Check',
                'verbose_name_plural': 'KRA Compliance Checks',
                'indexes': [models.Index(fields=['kra_pin'], name='integration_kra_pin_be9037_idx'), models.Index(fields=['is_compliant'], name='integration_is_comp_1bb399_idx'), models.Index(fields=['created_at'], name='integration_created_580900_idx')],
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=100)),
                ('payload', models.JSONField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', max_length=20)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='integrations.webhookendpoint')),
            ],
            options={
                'verbose_name': 'Webhook Event',
                'verbose_name_plural': 'Webhook Events',
                'indexes': [models.Index(fields=['event_type'], name='integration_event_t_7524ac_idx'), models.Index(fields=['status'], name='integration_status_c4bc1e_idx'), models.Index(fields=['created_at'], name='integration_created_cb395c_idx')],
            },
        ),
    ]
