# Generated by Django 5.2.7 on 2025-10-25 21:43

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaxCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_categories', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Tax Category',
                'verbose_name_plural': 'Tax Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('calculation_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], default='percentage', max_length=20, verbose_name='Calculation Type')),
                ('rate', models.DecimalField(decimal_places=4, help_text='For percentage: 0-100, for fixed amount: actual amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Rate')),
                ('is_default', models.BooleanField(default=False, verbose_name='Default')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('apply_to_shipping', models.BooleanField(default=False, verbose_name='Apply to Shipping')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('tax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax Registration Number')),
                ('kra_code', models.CharField(blank=True, help_text='KRA tax code mapping', max_length=50, null=True, verbose_name='KRA Code')),
                ('kra_rate_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='KRA Rate Code')),
                ('is_vat', models.BooleanField(default=False, verbose_name='Is VAT')),
                ('is_withholding', models.BooleanField(default=False, verbose_name='Is Withholding Tax')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes', to='business.bussiness')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes', to='taxes.taxcategory')),
            ],
            options={
                'verbose_name': 'Tax',
                'verbose_name_plural': 'Taxes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaxGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_groups', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Tax Group',
                'verbose_name_plural': 'Tax Groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaxGroupItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_items', to='taxes.tax')),
                ('tax_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='taxes.taxgroup')),
            ],
            options={
                'verbose_name': 'Tax Group Item',
                'verbose_name_plural': 'Tax Group Items',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='taxgroup',
            name='taxes',
            field=models.ManyToManyField(related_name='tax_groups', through='taxes.TaxGroupItem', to='taxes.tax'),
        ),
        migrations.CreateModel(
            name='TaxPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('period_type', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi_annual', 'Semi-Annual'), ('annual', 'Annual'), ('custom', 'Custom')], max_length=20, verbose_name='Period Type')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('due_date', models.DateField(verbose_name='Filing Due Date')),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('filed', 'Filed'), ('paid', 'Paid')], default='open', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('total_collected', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Total Tax Collected')),
                ('total_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Total Tax Paid')),
                ('kra_filing_reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='KRA Filing Reference')),
                ('filed_at', models.DateTimeField(blank=True, null=True, verbose_name='Filed At')),
                ('submission_payload', models.JSONField(blank=True, help_text='Last payload submitted to KRA', null=True, verbose_name='Submission Payload')),
                ('submission_response', models.JSONField(blank=True, help_text='Last response received from KRA', null=True, verbose_name='Submission Response')),
                ('last_synced_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Synced At')),
                ('sync_status', models.CharField(choices=[('pending', 'Pending'), ('synced', 'Synced'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='Sync Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_periods', to='business.bussiness')),
            ],
            options={
                'verbose_name': 'Tax Period',
                'verbose_name_plural': 'Tax Periods',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddIndex(
            model_name='taxcategory',
            index=models.Index(fields=['name'], name='idx_tax_category_name'),
        ),
        migrations.AddIndex(
            model_name='taxcategory',
            index=models.Index(fields=['business'], name='idx_tax_category_business'),
        ),
        migrations.AddIndex(
            model_name='taxcategory',
            index=models.Index(fields=['is_active'], name='idx_tax_category_active'),
        ),
        migrations.AddIndex(
            model_name='taxcategory',
            index=models.Index(fields=['created_at'], name='idx_tax_category_created_at'),
        ),
        migrations.AlterUniqueTogether(
            name='taxcategory',
            unique_together={('name', 'business')},
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['name'], name='idx_tax_name'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['category'], name='idx_tax_category'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['business'], name='idx_tax_business'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['calculation_type'], name='idx_tax_calc_type'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['is_default'], name='idx_tax_is_default'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['is_active'], name='idx_tax_active'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['tax_number'], name='idx_tax_number'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['kra_code'], name='idx_tax_kra_code'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['is_vat'], name='idx_tax_is_vat'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['is_withholding'], name='idx_tax_is_withholding'),
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['created_at'], name='idx_tax_created_at'),
        ),
        migrations.AlterUniqueTogether(
            name='tax',
            unique_together={('name', 'business')},
        ),
        migrations.AddIndex(
            model_name='taxgroupitem',
            index=models.Index(fields=['tax_group'], name='idx_tax_grp_item_grp'),
        ),
        migrations.AddIndex(
            model_name='taxgroupitem',
            index=models.Index(fields=['tax'], name='idx_tax_grp_item_tax'),
        ),
        migrations.AddIndex(
            model_name='taxgroupitem',
            index=models.Index(fields=['order'], name='idx_tax_grp_item_order'),
        ),
        migrations.AlterUniqueTogether(
            name='taxgroupitem',
            unique_together={('tax_group', 'tax')},
        ),
        migrations.AddIndex(
            model_name='taxgroup',
            index=models.Index(fields=['name'], name='idx_tax_group_name'),
        ),
        migrations.AddIndex(
            model_name='taxgroup',
            index=models.Index(fields=['business'], name='idx_tax_group_business'),
        ),
        migrations.AddIndex(
            model_name='taxgroup',
            index=models.Index(fields=['is_active'], name='idx_tax_group_active'),
        ),
        migrations.AddIndex(
            model_name='taxgroup',
            index=models.Index(fields=['created_at'], name='idx_tax_group_created_at'),
        ),
        migrations.AlterUniqueTogether(
            name='taxgroup',
            unique_together={('name', 'business')},
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['business'], name='idx_tax_period_business'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['name'], name='idx_tax_period_name'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['period_type'], name='idx_tax_period_type'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['start_date'], name='idx_tax_period_start_date'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['end_date'], name='idx_tax_period_end_date'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['due_date'], name='idx_tax_period_due_date'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['status'], name='idx_tax_period_status'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['created_at'], name='idx_tax_period_created_at'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['last_synced_at'], name='idx_tax_period_last_synced_at'),
        ),
        migrations.AddIndex(
            model_name='taxperiod',
            index=models.Index(fields=['sync_status'], name='idx_tax_period_sync_status'),
        ),
    ]
