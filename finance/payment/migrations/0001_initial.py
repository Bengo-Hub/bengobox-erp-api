# Generated by Django 5.2 on 2025-09-11 07:49

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        ('contacts', '0001_initial'),
        ('core_orders', '0001_initial'),
        ('pos', '0001_initial'),
        ('product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('mpesa', 'M-Pesa'), ('card', 'Credit/Debit Card'), ('paypal', 'PayPal'), ('stripe', 'Stripe'), ('bank', 'Bank Transfer'), ('cod', 'Cash on Delivery')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('transaction_id', models.CharField(blank=True, help_text='Unified transaction ID for all payment providers', max_length=100, null=True)),
                ('mobile_money_provider', models.CharField(blank=True, choices=[('mpesa', 'M-Pesa')], help_text='Mobile money provider used for payment', max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number used for mobile money payment', max_length=15, null=True)),
                ('payment_processor', models.CharField(blank=True, help_text='Payment processor used (e.g., Safaricom)', max_length=50, null=True)),
                ('processor_response', models.JSONField(blank=True, help_text='Full response from payment processor', null=True)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Processing fee charged by payment provider', max_digits=10)),
                ('kra_compliance', models.BooleanField(default=False, help_text='Whether payment complies with KRA requirements')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax amount included in payment', max_digits=10)),
                ('tax_reference', models.CharField(blank=True, help_text='KRA tax reference number', max_length=50, null=True)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_at', models.DateTimeField(blank=True, help_text='When payment was processed', null=True)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'finance_payments',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_verification', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillingDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('document_type', models.CharField(choices=[('invoice', 'Invoice'), ('receipt', 'Receipt'), ('credit_note', 'Credit Note'), ('debit_note', 'Debit Note'), ('quote', 'Quote')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('balance_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('terms', models.TextField(blank=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='business.branch')),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing_documents', to='business.bussiness')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_billing_documents', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing_documents', to='contacts.contact')),
                ('related_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_orders.baseorder')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_billing_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Billing Document',
                'verbose_name_plural': 'Billing Documents',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillingDocumentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], max_length=20)),
                ('message', models.TextField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='payment.billingdocument')),
            ],
            options={
                'verbose_name_plural': 'Billing document histories',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('1'), max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='payment.billingdocument')),
                ('order_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_items', to='core_orders.orderitem')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_items', to='product.products')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='POSPayment',
            fields=[
                ('payment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='payment.payment')),
                ('change_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tendered_amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
            bases=('payment.payment',),
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('refund_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('refund_transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payment.payment')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_type', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(max_length=20)),
                ('transaction_id', models.CharField(max_length=100)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('raw_response', models.JSONField(blank=True, null=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='payment.payment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='billingdocument',
            index=models.Index(fields=['document_number'], name='idx_billing_document_number'),
        ),
        migrations.AddIndex(
            model_name='billingdocument',
            index=models.Index(fields=['document_type'], name='idx_billing_document_type'),
        ),
        migrations.AddIndex(
            model_name='billingdocument',
            index=models.Index(fields=['status'], name='idx_billing_document_status'),
        ),
        migrations.AddIndex(
            model_name='billingdocument',
            index=models.Index(fields=['customer'], name='idx_billing_document_customer'),
        ),
        migrations.AddIndex(
            model_name='billingdocument',
            index=models.Index(fields=['issue_date'], name='idx_billing_doc_issue_date'),
        ),
        migrations.AddIndex(
            model_name='billingdocument',
            index=models.Index(fields=['due_date'], name='idx_billing_document_due_date'),
        ),
        migrations.AddField(
            model_name='pospayment',
            name='sale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='pos.sales'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_method'], name='idx_payment_method'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='idx_payment_status'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['reference_number'], name='idx_payment_reference'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['transaction_id'], name='idx_payment_transaction'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_date'], name='idx_payment_date'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['mobile_money_provider'], name='idx_payment_mobile_provider'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['phone_number'], name='idx_payment_phone'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['kra_compliance'], name='idx_payment_kra_compliance'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at'], name='idx_payment_created_at'),
        ),
    ]
