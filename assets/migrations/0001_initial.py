# Generated by Django 5.2 on 2025-10-06 08:28

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Asset Category',
                'verbose_name_plural': 'Asset Categories',
                'db_table': 'asset_categories',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_tag', models.CharField(max_length=50, unique=True, verbose_name='Asset Tag')),
                ('name', models.CharField(max_length=200, verbose_name='Asset Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Serial Number')),
                ('model', models.CharField(blank=True, max_length=100, null=True, verbose_name='Model')),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True, verbose_name='Manufacturer')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Purchase Date')),
                ('purchase_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Purchase Cost')),
                ('current_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Current Value')),
                ('depreciation_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, verbose_name='Depreciation Rate (%)')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('disposed', 'Disposed'), ('lost', 'Lost/Stolen')], default='active', max_length=20, verbose_name='Status')),
                ('condition', models.CharField(blank=True, max_length=50, null=True, verbose_name='Condition')),
                ('warranty_expiry', models.DateField(blank=True, null=True, verbose_name='Warranty Expiry')),
                ('last_maintenance', models.DateField(blank=True, null=True, verbose_name='Last Maintenance')),
                ('next_maintenance', models.DateField(blank=True, null=True, verbose_name='Next Maintenance Due')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_assets', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.branch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assets', to=settings.AUTH_USER_MODEL)),
                ('custodian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custodian_assets', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.assetcategory')),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Assets',
                'db_table': 'assets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssetDisposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disposal_date', models.DateField(verbose_name='Disposal Date')),
                ('disposal_method', models.CharField(choices=[('sold', 'Sold'), ('scrapped', 'Scrapped'), ('donated', 'Donated'), ('stolen', 'Stolen/Lost'), ('returned', 'Returned to Supplier')], max_length=20, verbose_name='Disposal Method')),
                ('disposal_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Disposal Value')),
                ('reason', models.TextField(verbose_name='Reason for Disposal')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disposals', to='assets.asset')),
            ],
            options={
                'verbose_name': 'Asset Disposal',
                'verbose_name_plural': 'Asset Disposals',
                'db_table': 'asset_disposals',
                'ordering': ['-disposal_date'],
            },
        ),
        migrations.CreateModel(
            name='AssetMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('preventive', 'Preventive'), ('corrective', 'Corrective'), ('emergency', 'Emergency')], max_length=20, verbose_name='Maintenance Type')),
                ('scheduled_date', models.DateField(verbose_name='Scheduled Date')),
                ('completed_date', models.DateField(blank=True, null=True, verbose_name='Completed Date')),
                ('performed_by', models.CharField(max_length=100, verbose_name='Performed By')),
                ('cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Cost')),
                ('description', models.TextField(verbose_name='Description')),
                ('findings', models.TextField(blank=True, null=True, verbose_name='Findings')),
                ('recommendations', models.TextField(blank=True, null=True, verbose_name='Recommendations')),
                ('next_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Next Maintenance')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20, verbose_name='Status')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='assets.asset')),
            ],
            options={
                'verbose_name': 'Asset Maintenance',
                'verbose_name_plural': 'Asset Maintenance',
                'db_table': 'asset_maintenance',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='AssetTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_location', models.CharField(max_length=200, verbose_name='From Location')),
                ('to_location', models.CharField(max_length=200, verbose_name='To Location')),
                ('transfer_date', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Transfer Reason')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='assets.asset')),
                ('from_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_from', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_to', to=settings.AUTH_USER_MODEL)),
                ('transferred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_transfers_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Asset Transfer',
                'verbose_name_plural': 'Asset Transfers',
                'db_table': 'asset_transfers',
                'ordering': ['-transfer_date'],
            },
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['asset_tag'], name='idx_assets_asset_tag'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['category'], name='idx_assets_category'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['status'], name='idx_assets_status'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['branch'], name='idx_assets_branch'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['assigned_to'], name='idx_assets_assigned_to'),
        ),
    ]
